{
	"id": "0f7f9dbbad8b862e9da73d702bb597fa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (finance/VestingWallet.sol)\npragma solidity ^0.8.18;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"../token/ERC20/utils/SafeERC20.sol\";\nimport {Address} from \"../utils/Address.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {Ownable} from \"../access/Ownable.sol\";\n\n/**\n * @dev A vesting wallet is an ownable contract that can receive native currency and ERC20 tokens, and release these\n * assets to the wallet owner, also referred to as \"beneficiary\", according to a vesting schedule.\n *\n * Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\n * Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\n * be immediately releasable.\n *\n * By setting the duration to 0, one can configure this contract to behave like an asset timelock that hold tokens for\n * a beneficiary until a specified time.\n *\n * NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens.\n * Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a\n * counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the\n * near future.\n *\n * NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make\n * sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended.\n */\ncontract VestingWallet is Context, Ownable {\n    event EtherReleased(uint256 amount);\n    event ERC20Released(address indexed token, uint256 amount);\n\n    uint256 private _released;\n    mapping(address token => uint256) private _erc20Released;\n    uint64 private immutable _start;\n    uint64 private immutable _duration;\n\n    /**\n     * @dev Sets the sender as the initial owner, the beneficiary as the pending owner, the start timestamp and the\n     * vesting duration of the vesting wallet.\n     */\n    constructor(address beneficiary, uint64 startTimestamp, uint64 durationSeconds) payable Ownable(beneficiary) {\n        _start = startTimestamp;\n        _duration = durationSeconds;\n    }\n\n    /**\n     * @dev The contract should be able to receive Eth.\n     */\n    receive() external payable virtual {}\n\n    /**\n     * @dev Getter for the start timestamp.\n     */\n    function start() public view virtual returns (uint256) {\n        return _start;\n    }\n\n    /**\n     * @dev Getter for the vesting duration.\n     */\n    function duration() public view virtual returns (uint256) {\n        return _duration;\n    }\n\n    /**\n     * @dev Getter for the end timestamp.\n     */\n    function end() public view virtual returns (uint256) {\n        return start() + duration();\n    }\n\n    /**\n     * @dev Amount of eth already released\n     */\n    function released() public view virtual returns (uint256) {\n        return _released;\n    }\n\n    /**\n     * @dev Amount of token already released\n     */\n    function released(address token) public view virtual returns (uint256) {\n        return _erc20Released[token];\n    }\n\n    /**\n     * @dev Getter for the amount of releasable eth.\n     */\n    function releasable() public view virtual returns (uint256) {\n        return vestedAmount(uint64(block.timestamp)) - released();\n    }\n\n    /**\n     * @dev Getter for the amount of releasable `token` tokens. `token` should be the address of an\n     * IERC20 contract.\n     */\n    function releasable(address token) public view virtual returns (uint256) {\n        return vestedAmount(token, uint64(block.timestamp)) - released(token);\n    }\n\n    /**\n     * @dev Release the native token (ether) that have already vested.\n     *\n     * Emits a {EtherReleased} event.\n     */\n    function release() public virtual {\n        uint256 amount = releasable();\n        _released += amount;\n        emit EtherReleased(amount);\n        Address.sendValue(payable(owner()), amount);\n    }\n\n    /**\n     * @dev Release the tokens that have already vested.\n     *\n     * Emits a {ERC20Released} event.\n     */\n    function release(address token) public virtual {\n        uint256 amount = releasable(token);\n        _erc20Released[token] += amount;\n        emit ERC20Released(token, amount);\n        SafeERC20.safeTransfer(IERC20(token), owner(), amount);\n    }\n\n    /**\n     * @dev Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\n     */\n    function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {\n        return _vestingSchedule(address(this).balance + released(), timestamp);\n    }\n\n    /**\n     * @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\n     */\n    function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {\n        return _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp);\n    }\n\n    /**\n     * @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n     * an asset given its total historical allocation.\n     */\n    function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {\n        if (timestamp < start()) {\n            return 0;\n        } else if (timestamp >= end()) {\n            return totalAllocation;\n        } else {\n            return (totalAllocation * (timestamp - start())) / duration();\n        }\n    }\n}\n"
			},
			"contracts/OpenZeppelin/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.18;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/OpenZeppelin/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.18;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"contracts/OpenZeppelin/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.18;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.18;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"contracts/OpenZeppelin/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.18;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"contracts/OpenZeppelin/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.18;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol": {
				"VestingWallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "startTimestamp",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "durationSeconds",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Released",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EtherReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "end",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "releasable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releasable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "A vesting wallet is an ownable contract that can receive native currency and ERC20 tokens, and release these assets to the wallet owner, also referred to as \"beneficiary\", according to a vesting schedule. Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning. Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly) be immediately releasable. By setting the duration to 0, one can configure this contract to behave like an asset timelock that hold tokens for a beneficiary until a specified time. NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens. Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the near future. NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Sets the sender as the initial owner, the beneficiary as the pending owner, the start timestamp and the vesting duration of the vesting wallet."
							},
							"duration()": {
								"details": "Getter for the vesting duration."
							},
							"end()": {
								"details": "Getter for the end timestamp."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"releasable()": {
								"details": "Getter for the amount of releasable eth."
							},
							"releasable(address)": {
								"details": "Getter for the amount of releasable `token` tokens. `token` should be the address of an IERC20 contract."
							},
							"release()": {
								"details": "Release the native token (ether) that have already vested. Emits a {EtherReleased} event."
							},
							"release(address)": {
								"details": "Release the tokens that have already vested. Emits a {ERC20Released} event."
							},
							"released()": {
								"details": "Amount of eth already released"
							},
							"released(address)": {
								"details": "Amount of token already released"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"start()": {
								"details": "Getter for the start timestamp."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"vestedAmount(address,uint64)": {
								"details": "Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
							},
							"vestedAmount(uint64)": {
								"details": "Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":1638:5670  contract VestingWallet is Context, Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2143:2329  constructor(address beneficiary, uint64 startTimestamp, uint64 durationSeconds) payable Ownable(beneficiary) {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2239:2250  beneficiary */\n  dup3\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2271:2285  startTimestamp */\n  dup2\n    /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2262:2285  _start = startTimestamp */\n  0xffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2307:2322  durationSeconds */\n  dup1\n    /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2295:2322  _duration = durationSeconds */\n  0xffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2143:2329  constructor(address beneficiary, uint64 startTimestamp, uint64 durationSeconds) payable Ownable(beneficiary) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":1638:5670  contract VestingWallet is Context, Ownable {... */\n  jump(tag_12)\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"contracts/OpenZeppelin/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_15:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_17:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_18:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_31\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_17\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_19:\n    /* \"#utility.yul\":641:665   */\n  tag_33\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_18\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_34:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_20:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_36\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_19\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:946   */\ntag_21:\n    /* \"#utility.yul\":881:888   */\n  0x00\n    /* \"#utility.yul\":921:939   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":914:919   */\n  dup3\n    /* \"#utility.yul\":910:940   */\n  and\n    /* \"#utility.yul\":899:940   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:946   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1072   */\ntag_22:\n    /* \"#utility.yul\":1024:1047   */\n  tag_39\n    /* \"#utility.yul\":1041:1046   */\n  dup2\n    /* \"#utility.yul\":1024:1047   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1017:1022   */\n  dup2\n    /* \"#utility.yul\":1014:1048   */\n  eq\n    /* \"#utility.yul\":1004:1066   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1062:1063   */\n  0x00\n    /* \"#utility.yul\":1059:1060   */\n  dup1\n    /* \"#utility.yul\":1052:1064   */\n  revert\n    /* \"#utility.yul\":1004:1066   */\ntag_40:\n    /* \"#utility.yul\":952:1072   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1078:1219   */\ntag_23:\n    /* \"#utility.yul\":1134:1139   */\n  0x00\n    /* \"#utility.yul\":1165:1171   */\n  dup2\n    /* \"#utility.yul\":1159:1172   */\n  mload\n    /* \"#utility.yul\":1150:1172   */\n  swap1\n  pop\n    /* \"#utility.yul\":1181:1213   */\n  tag_42\n    /* \"#utility.yul\":1207:1212   */\n  dup2\n    /* \"#utility.yul\":1181:1213   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1078:1219   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1225:1884   */\ntag_2:\n    /* \"#utility.yul\":1311:1317   */\n  0x00\n    /* \"#utility.yul\":1319:1325   */\n  dup1\n    /* \"#utility.yul\":1327:1333   */\n  0x00\n    /* \"#utility.yul\":1376:1378   */\n  0x60\n    /* \"#utility.yul\":1364:1373   */\n  dup5\n    /* \"#utility.yul\":1355:1362   */\n  dup7\n    /* \"#utility.yul\":1351:1374   */\n  sub\n    /* \"#utility.yul\":1347:1379   */\n  slt\n    /* \"#utility.yul\":1344:1463   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1382:1461   */\n  tag_45\n  tag_15\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1344:1463   */\ntag_44:\n    /* \"#utility.yul\":1502:1503   */\n  0x00\n    /* \"#utility.yul\":1527:1591   */\n  tag_46\n    /* \"#utility.yul\":1583:1590   */\n  dup7\n    /* \"#utility.yul\":1574:1580   */\n  dup3\n    /* \"#utility.yul\":1563:1572   */\n  dup8\n    /* \"#utility.yul\":1559:1581   */\n  add\n    /* \"#utility.yul\":1527:1591   */\n  tag_20\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1517:1591   */\n  swap4\n  pop\n    /* \"#utility.yul\":1473:1601   */\n  pop\n    /* \"#utility.yul\":1640:1642   */\n  0x20\n    /* \"#utility.yul\":1666:1729   */\n  tag_47\n    /* \"#utility.yul\":1721:1728   */\n  dup7\n    /* \"#utility.yul\":1712:1718   */\n  dup3\n    /* \"#utility.yul\":1701:1710   */\n  dup8\n    /* \"#utility.yul\":1697:1719   */\n  add\n    /* \"#utility.yul\":1666:1729   */\n  tag_23\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1656:1729   */\n  swap3\n  pop\n    /* \"#utility.yul\":1611:1739   */\n  pop\n    /* \"#utility.yul\":1778:1780   */\n  0x40\n    /* \"#utility.yul\":1804:1867   */\n  tag_48\n    /* \"#utility.yul\":1859:1866   */\n  dup7\n    /* \"#utility.yul\":1850:1856   */\n  dup3\n    /* \"#utility.yul\":1839:1848   */\n  dup8\n    /* \"#utility.yul\":1835:1857   */\n  add\n    /* \"#utility.yul\":1804:1867   */\n  tag_23\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1794:1867   */\n  swap2\n  pop\n    /* \"#utility.yul\":1749:1877   */\n  pop\n    /* \"#utility.yul\":1225:1884   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1890:2008   */\ntag_24:\n    /* \"#utility.yul\":1977:2001   */\n  tag_50\n    /* \"#utility.yul\":1995:2000   */\n  dup2\n    /* \"#utility.yul\":1977:2001   */\n  tag_18\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1972:1975   */\n  dup3\n    /* \"#utility.yul\":1965:2002   */\n  mstore\n    /* \"#utility.yul\":1890:2008   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2014:2236   */\ntag_8:\n    /* \"#utility.yul\":2107:2111   */\n  0x00\n    /* \"#utility.yul\":2145:2147   */\n  0x20\n    /* \"#utility.yul\":2134:2143   */\n  dup3\n    /* \"#utility.yul\":2130:2148   */\n  add\n    /* \"#utility.yul\":2122:2148   */\n  swap1\n  pop\n    /* \"#utility.yul\":2158:2229   */\n  tag_52\n    /* \"#utility.yul\":2226:2227   */\n  0x00\n    /* \"#utility.yul\":2215:2224   */\n  dup4\n    /* \"#utility.yul\":2211:2228   */\n  add\n    /* \"#utility.yul\":2202:2208   */\n  dup5\n    /* \"#utility.yul\":2158:2229   */\n  tag_24\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2014:2236   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":1638:5670  contract VestingWallet is Context, Ownable {... */\ntag_12:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3b4066bd7b7960752225af105d3beafb5c47a26c5aae7e6798a437b7c0bb33e6\")\n  0x00\n  assignImmutable(\"0x77c32b454bb61eb9df9e3848d0ded3e59753acda90ae58befe564733aec82e4c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":1638:5670  contract VestingWallet is Context, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x96132521\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xbe9a6555\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xefbe1c1c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xfbccedae\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x96132521\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9852595c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa3f8eace\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x810ec23b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x86d1a69f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x0a17b06b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19165587\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4613:4778  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2662:2753  function duration() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4227:4473  function release(address token) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4919:5121  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3905:4103  function release() public virtual {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2979:3070  function released() public view virtual returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3137:3253  function released(address token) public view virtual returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3608:3767  function releasable(address token) public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2510:2595  function start() public view virtual returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2817:2914  function end() public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3328:3462  function releasable() public view virtual returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4613:4778  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_26:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4682:4689  uint256 */\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4708:4771  _vestingSchedule(address(this).balance + released(), timestamp) */\n      tag_86\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4749:4759  released() */\n      tag_87\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4749:4757  released */\n      tag_57\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4749:4759  released() */\n      jump\t// in\n    tag_87:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4725:4746  address(this).balance */\n      selfbalance\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4725:4759  address(this).balance + released() */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4761:4770  timestamp */\n      dup4\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4708:4724  _vestingSchedule */\n      tag_90\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4708:4771  _vestingSchedule(address(this).balance + released(), timestamp) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4701:4771  return _vestingSchedule(address(this).balance + released(), timestamp) */\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4613:4778  function vestedAmount(uint64 timestamp) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2662:2753  function duration() public view virtual returns (uint256) {... */\n    tag_31:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2711:2718  uint256 */\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2737:2746  _duration */\n      immutable(\"0x3b4066bd7b7960752225af105d3beafb5c47a26c5aae7e6798a437b7c0bb33e6\")\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2730:2746  return _duration */\n      0xffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2662:2753  function duration() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4227:4473  function release(address token) public virtual {... */\n    tag_37:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4284:4298  uint256 amount */\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4301:4318  releasable(token) */\n      tag_93\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4312:4317  token */\n      dup3\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4301:4311  releasable */\n      tag_67\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4301:4318  releasable(token) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4284:4318  uint256 amount = releasable(token) */\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4353:4359  amount */\n      dup1\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4328:4342  _erc20Released */\n      0x02\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4328:4349  _erc20Released[token] */\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4343:4348  token */\n      dup5\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4328:4349  _erc20Released[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4328:4359  _erc20Released[token] += amount */\n      dup3\n      dup3\n      sload\n      tag_94\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_94:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4388:4393  token */\n      dup2\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4374:4402  ERC20Released(token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4395:4401  amount */\n      dup3\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4374:4402  ERC20Released(token, amount) */\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4412:4466  SafeERC20.safeTransfer(IERC20(token), owner(), amount) */\n      tag_96\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4442:4447  token */\n      dup3\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4450:4457  owner() */\n      tag_97\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4450:4455  owner */\n      tag_52\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4450:4457  owner() */\n      jump\t// in\n    tag_97:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4459:4465  amount */\n      dup4\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4412:4434  SafeERC20.safeTransfer */\n      tag_98\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4412:4466  SafeERC20.safeTransfer(IERC20(token), owner(), amount) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4274:4473  {... */\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4227:4473  function release(address token) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_40:\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_100\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_100:\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_103\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_104\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4919:5121  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_45:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5003:5010  uint256 */\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5029:5114  _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      tag_106\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5087:5102  released(token) */\n      tag_107\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5096:5101  token */\n      dup5\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5087:5095  released */\n      tag_62\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5087:5102  released(token) */\n      jump\t// in\n    tag_107:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5053:5058  token */\n      dup5\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5046:5069  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5078:5082  this */\n      address\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5046:5084  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_108:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5046:5102  IERC20(token).balanceOf(address(this)) + released(token) */\n      tag_113\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_113:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5104:5113  timestamp */\n      dup4\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5029:5045  _vestingSchedule */\n      tag_90\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5029:5114  _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5022:5114  return _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4919:5121  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3905:4103  function release() public virtual {... */\n    tag_49:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3949:3963  uint256 amount */\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3966:3978  releasable() */\n      tag_115\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3966:3976  releasable */\n      tag_83\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3966:3978  releasable() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3949:3978  uint256 amount = releasable() */\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4001:4007  amount */\n      dup1\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3988:3997  _released */\n      0x01\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3988:4007  _released += amount */\n      dup3\n      dup3\n      sload\n      tag_116\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_116:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4022:4043  EtherReleased(amount) */\n      0xda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4036:4042  amount */\n      dup2\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4022:4043  EtherReleased(amount) */\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4053:4096  Address.sendValue(payable(owner()), amount) */\n      tag_118\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4079:4086  owner() */\n      tag_119\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4079:4084  owner */\n      tag_52\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4079:4086  owner() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4089:4095  amount */\n      dup3\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4053:4070  Address.sendValue */\n      tag_120\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":4053:4096  Address.sendValue(payable(owner()), amount) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3939:4103  {... */\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3905:4103  function release() public virtual {... */\n      jump\t// out\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_52:\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2979:3070  function released() public view virtual returns (uint256) {... */\n    tag_57:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3028:3035  uint256 */\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3054:3063  _released */\n      sload(0x01)\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3047:3063  return _released */\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2979:3070  function released() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3137:3253  function released(address token) public view virtual returns (uint256) {... */\n    tag_62:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3199:3206  uint256 */\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3225:3239  _erc20Released */\n      0x02\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3225:3246  _erc20Released[token] */\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3240:3245  token */\n      dup4\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3225:3246  _erc20Released[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3218:3246  return _erc20Released[token] */\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3137:3253  function released(address token) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3608:3767  function releasable(address token) public view virtual returns (uint256) {... */\n    tag_67:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3672:3679  uint256 */\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3745:3760  released(token) */\n      tag_125\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3754:3759  token */\n      dup3\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3745:3753  released */\n      tag_62\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3745:3760  released(token) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3698:3742  vestedAmount(token, uint64(block.timestamp)) */\n      tag_126\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3711:3716  token */\n      dup4\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3725:3740  block.timestamp */\n      timestamp\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3698:3710  vestedAmount */\n      tag_45\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3698:3742  vestedAmount(token, uint64(block.timestamp)) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3698:3760  vestedAmount(token, uint64(block.timestamp)) - released(token) */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3691:3760  return vestedAmount(token, uint64(block.timestamp)) - released(token) */\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3608:3767  function releasable(address token) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2510:2595  function start() public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2556:2563  uint256 */\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2582:2588  _start */\n      immutable(\"0x77c32b454bb61eb9df9e3848d0ded3e59753acda90ae58befe564733aec82e4c\")\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2575:2588  return _start */\n      0xffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2510:2595  function start() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2817:2914  function end() public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2861:2868  uint256 */\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2897:2907  duration() */\n      tag_131\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2897:2905  duration */\n      tag_31\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2897:2907  duration() */\n      jump\t// in\n    tag_131:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2887:2894  start() */\n      tag_132\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2887:2892  start */\n      tag_71\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2887:2894  start() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2887:2907  start() + duration() */\n      tag_133\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_133:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2880:2907  return start() + duration() */\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":2817:2914  function end() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_80:\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_135\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_137:\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_139\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_104\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3328:3462  function releasable() public view virtual returns (uint256) {... */\n    tag_83:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3379:3386  uint256 */\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3445:3455  released() */\n      tag_141\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3445:3453  released */\n      tag_57\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3445:3455  released() */\n      jump\t// in\n    tag_141:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3405:3442  vestedAmount(uint64(block.timestamp)) */\n      tag_142\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3425:3440  block.timestamp */\n      timestamp\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3405:3417  vestedAmount */\n      tag_26\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3405:3442  vestedAmount(uint64(block.timestamp)) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3405:3455  vestedAmount(uint64(block.timestamp)) - released() */\n      tag_143\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_143:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3398:3455  return vestedAmount(uint64(block.timestamp)) - released() */\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":3328:3462  function releasable() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5316:5668  function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {... */\n    tag_90:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5416:5423  uint256 */\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5451:5458  start() */\n      tag_145\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5451:5456  start */\n      tag_71\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5451:5458  start() */\n      jump\t// in\n    tag_145:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5439:5448  timestamp */\n      dup3\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5439:5458  timestamp < start() */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5435:5662  if (timestamp < start()) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5481:5482  0 */\n      0x00\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5474:5482  return 0 */\n      swap1\n      pop\n      jump(tag_144)\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5435:5662  if (timestamp < start()) {... */\n    tag_146:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5516:5521  end() */\n      tag_148\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5516:5519  end */\n      tag_75\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5516:5521  end() */\n      jump\t// in\n    tag_148:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5503:5512  timestamp */\n      dup3\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5503:5521  timestamp >= end() */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5499:5662  if (timestamp >= end()) {... */\n      tag_149\n      jumpi\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5544:5559  totalAllocation */\n      dup3\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5537:5559  return totalAllocation */\n      swap1\n      pop\n      jump(tag_144)\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5499:5662  if (timestamp >= end()) {... */\n    tag_149:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5641:5651  duration() */\n      tag_151\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5641:5649  duration */\n      tag_31\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5641:5651  duration() */\n      jump\t// in\n    tag_151:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5629:5636  start() */\n      tag_152\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5629:5634  start */\n      tag_71\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5629:5636  start() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5617:5626  timestamp */\n      dup4\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5617:5636  timestamp - start() */\n      0xffffffffffffffff\n      and\n      tag_153\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_153:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5598:5613  totalAllocation */\n      dup5\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5598:5637  totalAllocation * (timestamp - start()) */\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5597:5651  (totalAllocation * (timestamp - start())) / duration() */\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5590:5651  return (totalAllocation * (timestamp - start())) / duration() */\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":5316:5668  function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {... */\n    tag_144:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_98:\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_159\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_160\n      swap3\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_162\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_101:\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_164\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_165\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1855:1862  owner() */\n      tag_166\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1855:1860  owner */\n      tag_52\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_167\n      jumpi\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_168\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_165\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_167:\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_104:\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"contracts/OpenZeppelin/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1531:1862  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_120:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1640:1646  amount */\n      dup1\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1616:1637  address(this).balance */\n      selfbalance\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1616:1646  address(this).balance < amount */\n      lt\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1612:1721  if (address(this).balance < amount) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1704:1708  this */\n      address\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1669:1710  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1612:1721  if (address(this).balance < amount) {... */\n    tag_172:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1732:1744  bool success */\n      0x00\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1750:1759  recipient */\n      dup3\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1750:1764  recipient.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1772:1778  amount */\n      dup3\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1750:1783  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_178\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_177)\n    tag_178:\n      0x60\n      swap2\n      pop\n    tag_177:\n      pop\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1731:1783  (bool success, ) = recipient.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1798:1805  success */\n      dup1\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1793:1856  if (!success) {... */\n      tag_179\n      jumpi\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1828:1845  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1793:1856  if (!success) {... */\n    tag_179:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1602:1862  {... */\n      pop\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":1531:1862  function sendValue(address payable recipient, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_162:\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_181\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_182\n      swap1\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_181:\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_183:\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_186:\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_165:\n        /* \"contracts/OpenZeppelin/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"contracts/OpenZeppelin/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/OpenZeppelin/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_182:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_190\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_191\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_191:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_193:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_199\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_198)\n    tag_199:\n      0x60\n      swap2\n      pop\n    tag_198:\n      pop\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_200\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_201\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_200:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_201:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_203\n      jumpi\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_204\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":4821:4828  _revert */\n      tag_205\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_206)\n    tag_203:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_207\n      jumpi\n      pop\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_207:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_208:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_202)\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_206:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_202:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_205:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_211:\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_214:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:435   */\n    tag_216:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:428   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:429   */\n      and\n        /* \"#utility.yul\":388:429   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":441:561   */\n    tag_217:\n        /* \"#utility.yul\":513:536   */\n      tag_245\n        /* \"#utility.yul\":530:535   */\n      dup2\n        /* \"#utility.yul\":513:536   */\n      tag_216\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":506:511   */\n      dup2\n        /* \"#utility.yul\":503:537   */\n      eq\n        /* \"#utility.yul\":493:555   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":551:552   */\n      0x00\n        /* \"#utility.yul\":548:549   */\n      dup1\n        /* \"#utility.yul\":541:553   */\n      revert\n        /* \"#utility.yul\":493:555   */\n    tag_246:\n        /* \"#utility.yul\":441:561   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:704   */\n    tag_218:\n        /* \"#utility.yul\":612:617   */\n      0x00\n        /* \"#utility.yul\":650:656   */\n      dup2\n        /* \"#utility.yul\":637:657   */\n      calldataload\n        /* \"#utility.yul\":628:657   */\n      swap1\n      pop\n        /* \"#utility.yul\":666:698   */\n      tag_248\n        /* \"#utility.yul\":692:697   */\n      dup2\n        /* \"#utility.yul\":666:698   */\n      tag_217\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":567:704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":710:1037   */\n    tag_25:\n        /* \"#utility.yul\":768:774   */\n      0x00\n        /* \"#utility.yul\":817:819   */\n      0x20\n        /* \"#utility.yul\":805:814   */\n      dup3\n        /* \"#utility.yul\":796:803   */\n      dup5\n        /* \"#utility.yul\":792:815   */\n      sub\n        /* \"#utility.yul\":788:820   */\n      slt\n        /* \"#utility.yul\":785:904   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":823:902   */\n      tag_251\n      tag_214\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":785:904   */\n    tag_250:\n        /* \"#utility.yul\":943:944   */\n      0x00\n        /* \"#utility.yul\":968:1020   */\n      tag_252\n        /* \"#utility.yul\":1012:1019   */\n      dup5\n        /* \"#utility.yul\":1003:1009   */\n      dup3\n        /* \"#utility.yul\":992:1001   */\n      dup6\n        /* \"#utility.yul\":988:1010   */\n      add\n        /* \"#utility.yul\":968:1020   */\n      tag_218\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":958:1020   */\n      swap2\n      pop\n        /* \"#utility.yul\":914:1030   */\n      pop\n        /* \"#utility.yul\":710:1037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1043:1120   */\n    tag_219:\n        /* \"#utility.yul\":1080:1087   */\n      0x00\n        /* \"#utility.yul\":1109:1114   */\n      dup2\n        /* \"#utility.yul\":1098:1114   */\n      swap1\n      pop\n        /* \"#utility.yul\":1043:1120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1126:1244   */\n    tag_220:\n        /* \"#utility.yul\":1213:1237   */\n      tag_255\n        /* \"#utility.yul\":1231:1236   */\n      dup2\n        /* \"#utility.yul\":1213:1237   */\n      tag_219\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":1208:1211   */\n      dup3\n        /* \"#utility.yul\":1201:1238   */\n      mstore\n        /* \"#utility.yul\":1126:1244   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1250:1472   */\n    tag_28:\n        /* \"#utility.yul\":1343:1347   */\n      0x00\n        /* \"#utility.yul\":1381:1383   */\n      0x20\n        /* \"#utility.yul\":1370:1379   */\n      dup3\n        /* \"#utility.yul\":1366:1384   */\n      add\n        /* \"#utility.yul\":1358:1384   */\n      swap1\n      pop\n        /* \"#utility.yul\":1394:1465   */\n      tag_257\n        /* \"#utility.yul\":1462:1463   */\n      0x00\n        /* \"#utility.yul\":1451:1460   */\n      dup4\n        /* \"#utility.yul\":1447:1464   */\n      add\n        /* \"#utility.yul\":1438:1444   */\n      dup5\n        /* \"#utility.yul\":1394:1465   */\n      tag_220\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1250:1472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1478:1604   */\n    tag_221:\n        /* \"#utility.yul\":1515:1522   */\n      0x00\n        /* \"#utility.yul\":1555:1597   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1548:1553   */\n      dup3\n        /* \"#utility.yul\":1544:1598   */\n      and\n        /* \"#utility.yul\":1533:1598   */\n      swap1\n      pop\n        /* \"#utility.yul\":1478:1604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1706   */\n    tag_222:\n        /* \"#utility.yul\":1647:1654   */\n      0x00\n        /* \"#utility.yul\":1676:1700   */\n      tag_260\n        /* \"#utility.yul\":1694:1699   */\n      dup3\n        /* \"#utility.yul\":1676:1700   */\n      tag_221\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1665:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1610:1706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1712:1834   */\n    tag_223:\n        /* \"#utility.yul\":1785:1809   */\n      tag_262\n        /* \"#utility.yul\":1803:1808   */\n      dup2\n        /* \"#utility.yul\":1785:1809   */\n      tag_222\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":1778:1783   */\n      dup2\n        /* \"#utility.yul\":1775:1810   */\n      eq\n        /* \"#utility.yul\":1765:1828   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":1824:1825   */\n      0x00\n        /* \"#utility.yul\":1821:1822   */\n      dup1\n        /* \"#utility.yul\":1814:1826   */\n      revert\n        /* \"#utility.yul\":1765:1828   */\n    tag_263:\n        /* \"#utility.yul\":1712:1834   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1840:1979   */\n    tag_224:\n        /* \"#utility.yul\":1886:1891   */\n      0x00\n        /* \"#utility.yul\":1924:1930   */\n      dup2\n        /* \"#utility.yul\":1911:1931   */\n      calldataload\n        /* \"#utility.yul\":1902:1931   */\n      swap1\n      pop\n        /* \"#utility.yul\":1940:1973   */\n      tag_265\n        /* \"#utility.yul\":1967:1972   */\n      dup2\n        /* \"#utility.yul\":1940:1973   */\n      tag_223\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1840:1979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1985:2314   */\n    tag_36:\n        /* \"#utility.yul\":2044:2050   */\n      0x00\n        /* \"#utility.yul\":2093:2095   */\n      0x20\n        /* \"#utility.yul\":2081:2090   */\n      dup3\n        /* \"#utility.yul\":2072:2079   */\n      dup5\n        /* \"#utility.yul\":2068:2091   */\n      sub\n        /* \"#utility.yul\":2064:2096   */\n      slt\n        /* \"#utility.yul\":2061:2180   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":2099:2178   */\n      tag_268\n      tag_214\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":2061:2180   */\n    tag_267:\n        /* \"#utility.yul\":2219:2220   */\n      0x00\n        /* \"#utility.yul\":2244:2297   */\n      tag_269\n        /* \"#utility.yul\":2289:2296   */\n      dup5\n        /* \"#utility.yul\":2280:2286   */\n      dup3\n        /* \"#utility.yul\":2269:2278   */\n      dup6\n        /* \"#utility.yul\":2265:2287   */\n      add\n        /* \"#utility.yul\":2244:2297   */\n      tag_224\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2234:2297   */\n      swap2\n      pop\n        /* \"#utility.yul\":2190:2307   */\n      pop\n        /* \"#utility.yul\":1985:2314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2320:2792   */\n    tag_44:\n        /* \"#utility.yul\":2387:2393   */\n      0x00\n        /* \"#utility.yul\":2395:2401   */\n      dup1\n        /* \"#utility.yul\":2444:2446   */\n      0x40\n        /* \"#utility.yul\":2432:2441   */\n      dup4\n        /* \"#utility.yul\":2423:2430   */\n      dup6\n        /* \"#utility.yul\":2419:2442   */\n      sub\n        /* \"#utility.yul\":2415:2447   */\n      slt\n        /* \"#utility.yul\":2412:2531   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":2450:2529   */\n      tag_272\n      tag_214\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2412:2531   */\n    tag_271:\n        /* \"#utility.yul\":2570:2571   */\n      0x00\n        /* \"#utility.yul\":2595:2648   */\n      tag_273\n        /* \"#utility.yul\":2640:2647   */\n      dup6\n        /* \"#utility.yul\":2631:2637   */\n      dup3\n        /* \"#utility.yul\":2620:2629   */\n      dup7\n        /* \"#utility.yul\":2616:2638   */\n      add\n        /* \"#utility.yul\":2595:2648   */\n      tag_224\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2585:2648   */\n      swap3\n      pop\n        /* \"#utility.yul\":2541:2658   */\n      pop\n        /* \"#utility.yul\":2697:2699   */\n      0x20\n        /* \"#utility.yul\":2723:2775   */\n      tag_274\n        /* \"#utility.yul\":2767:2774   */\n      dup6\n        /* \"#utility.yul\":2758:2764   */\n      dup3\n        /* \"#utility.yul\":2747:2756   */\n      dup7\n        /* \"#utility.yul\":2743:2765   */\n      add\n        /* \"#utility.yul\":2723:2775   */\n      tag_218\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2713:2775   */\n      swap2\n      pop\n        /* \"#utility.yul\":2668:2785   */\n      pop\n        /* \"#utility.yul\":2320:2792   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2798:2916   */\n    tag_225:\n        /* \"#utility.yul\":2885:2909   */\n      tag_276\n        /* \"#utility.yul\":2903:2908   */\n      dup2\n        /* \"#utility.yul\":2885:2909   */\n      tag_222\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2880:2883   */\n      dup3\n        /* \"#utility.yul\":2873:2910   */\n      mstore\n        /* \"#utility.yul\":2798:2916   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2922:3144   */\n    tag_54:\n        /* \"#utility.yul\":3015:3019   */\n      0x00\n        /* \"#utility.yul\":3053:3055   */\n      0x20\n        /* \"#utility.yul\":3042:3051   */\n      dup3\n        /* \"#utility.yul\":3038:3056   */\n      add\n        /* \"#utility.yul\":3030:3056   */\n      swap1\n      pop\n        /* \"#utility.yul\":3066:3137   */\n      tag_278\n        /* \"#utility.yul\":3134:3135   */\n      0x00\n        /* \"#utility.yul\":3123:3132   */\n      dup4\n        /* \"#utility.yul\":3119:3136   */\n      add\n        /* \"#utility.yul\":3110:3116   */\n      dup5\n        /* \"#utility.yul\":3066:3137   */\n      tag_225\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2922:3144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:3330   */\n    tag_226:\n        /* \"#utility.yul\":3198:3275   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3195:3196   */\n      0x00\n        /* \"#utility.yul\":3188:3276   */\n      mstore\n        /* \"#utility.yul\":3295:3299   */\n      0x11\n        /* \"#utility.yul\":3292:3293   */\n      0x04\n        /* \"#utility.yul\":3285:3300   */\n      mstore\n        /* \"#utility.yul\":3319:3323   */\n      0x24\n        /* \"#utility.yul\":3316:3317   */\n      0x00\n        /* \"#utility.yul\":3309:3324   */\n      revert\n        /* \"#utility.yul\":3336:3527   */\n    tag_89:\n        /* \"#utility.yul\":3376:3379   */\n      0x00\n        /* \"#utility.yul\":3395:3415   */\n      tag_281\n        /* \"#utility.yul\":3413:3414   */\n      dup3\n        /* \"#utility.yul\":3395:3415   */\n      tag_219\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3390:3415   */\n      swap2\n      pop\n        /* \"#utility.yul\":3429:3449   */\n      tag_282\n        /* \"#utility.yul\":3447:3448   */\n      dup4\n        /* \"#utility.yul\":3429:3449   */\n      tag_219\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":3424:3449   */\n      swap3\n      pop\n        /* \"#utility.yul\":3472:3473   */\n      dup3\n        /* \"#utility.yul\":3469:3470   */\n      dup3\n        /* \"#utility.yul\":3465:3474   */\n      add\n        /* \"#utility.yul\":3458:3474   */\n      swap1\n      pop\n        /* \"#utility.yul\":3493:3496   */\n      dup1\n        /* \"#utility.yul\":3490:3491   */\n      dup3\n        /* \"#utility.yul\":3487:3497   */\n      gt\n        /* \"#utility.yul\":3484:3520   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":3500:3518   */\n      tag_284\n      tag_226\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3484:3520   */\n    tag_283:\n        /* \"#utility.yul\":3336:3527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3533:3655   */\n    tag_227:\n        /* \"#utility.yul\":3606:3630   */\n      tag_286\n        /* \"#utility.yul\":3624:3629   */\n      dup2\n        /* \"#utility.yul\":3606:3630   */\n      tag_219\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3599:3604   */\n      dup2\n        /* \"#utility.yul\":3596:3631   */\n      eq\n        /* \"#utility.yul\":3586:3649   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":3645:3646   */\n      0x00\n        /* \"#utility.yul\":3642:3643   */\n      dup1\n        /* \"#utility.yul\":3635:3647   */\n      revert\n        /* \"#utility.yul\":3586:3649   */\n    tag_287:\n        /* \"#utility.yul\":3533:3655   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3661:3804   */\n    tag_228:\n        /* \"#utility.yul\":3718:3723   */\n      0x00\n        /* \"#utility.yul\":3749:3755   */\n      dup2\n        /* \"#utility.yul\":3743:3756   */\n      mload\n        /* \"#utility.yul\":3734:3756   */\n      swap1\n      pop\n        /* \"#utility.yul\":3765:3798   */\n      tag_289\n        /* \"#utility.yul\":3792:3797   */\n      dup2\n        /* \"#utility.yul\":3765:3798   */\n      tag_227\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3661:3804   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3810:4161   */\n    tag_112:\n        /* \"#utility.yul\":3880:3886   */\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x20\n        /* \"#utility.yul\":3917:3926   */\n      dup3\n        /* \"#utility.yul\":3908:3915   */\n      dup5\n        /* \"#utility.yul\":3904:3927   */\n      sub\n        /* \"#utility.yul\":3900:3932   */\n      slt\n        /* \"#utility.yul\":3897:4016   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3935:4014   */\n      tag_292\n      tag_214\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3897:4016   */\n    tag_291:\n        /* \"#utility.yul\":4055:4056   */\n      0x00\n        /* \"#utility.yul\":4080:4144   */\n      tag_293\n        /* \"#utility.yul\":4136:4143   */\n      dup5\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup6\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4080:4144   */\n      tag_228\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4070:4144   */\n      swap2\n      pop\n        /* \"#utility.yul\":4026:4154   */\n      pop\n        /* \"#utility.yul\":3810:4161   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4167:4361   */\n    tag_128:\n        /* \"#utility.yul\":4207:4211   */\n      0x00\n        /* \"#utility.yul\":4227:4247   */\n      tag_295\n        /* \"#utility.yul\":4245:4246   */\n      dup3\n        /* \"#utility.yul\":4227:4247   */\n      tag_219\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4222:4247   */\n      swap2\n      pop\n        /* \"#utility.yul\":4261:4281   */\n      tag_296\n        /* \"#utility.yul\":4279:4280   */\n      dup4\n        /* \"#utility.yul\":4261:4281   */\n      tag_219\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":4256:4281   */\n      swap3\n      pop\n        /* \"#utility.yul\":4305:4306   */\n      dup3\n        /* \"#utility.yul\":4302:4303   */\n      dup3\n        /* \"#utility.yul\":4298:4307   */\n      sub\n        /* \"#utility.yul\":4290:4307   */\n      swap1\n      pop\n        /* \"#utility.yul\":4329:4330   */\n      dup2\n        /* \"#utility.yul\":4323:4327   */\n      dup2\n        /* \"#utility.yul\":4320:4331   */\n      gt\n        /* \"#utility.yul\":4317:4354   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":4334:4352   */\n      tag_298\n      tag_226\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4317:4354   */\n    tag_297:\n        /* \"#utility.yul\":4167:4361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4367:4777   */\n    tag_155:\n        /* \"#utility.yul\":4407:4414   */\n      0x00\n        /* \"#utility.yul\":4430:4450   */\n      tag_300\n        /* \"#utility.yul\":4448:4449   */\n      dup3\n        /* \"#utility.yul\":4430:4450   */\n      tag_219\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4425:4450   */\n      swap2\n      pop\n        /* \"#utility.yul\":4464:4484   */\n      tag_301\n        /* \"#utility.yul\":4482:4483   */\n      dup4\n        /* \"#utility.yul\":4464:4484   */\n      tag_219\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4459:4484   */\n      swap3\n      pop\n        /* \"#utility.yul\":4519:4520   */\n      dup3\n        /* \"#utility.yul\":4516:4517   */\n      dup3\n        /* \"#utility.yul\":4512:4521   */\n      mul\n        /* \"#utility.yul\":4541:4571   */\n      tag_302\n        /* \"#utility.yul\":4559:4570   */\n      dup2\n        /* \"#utility.yul\":4541:4571   */\n      tag_219\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4530:4571   */\n      swap2\n      pop\n        /* \"#utility.yul\":4720:4721   */\n      dup3\n        /* \"#utility.yul\":4711:4718   */\n      dup3\n        /* \"#utility.yul\":4707:4722   */\n      div\n        /* \"#utility.yul\":4704:4705   */\n      dup5\n        /* \"#utility.yul\":4701:4723   */\n      eq\n        /* \"#utility.yul\":4681:4682   */\n      dup4\n        /* \"#utility.yul\":4674:4683   */\n      iszero\n        /* \"#utility.yul\":4654:4737   */\n      or\n        /* \"#utility.yul\":4631:4770   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":4750:4768   */\n      tag_304\n      tag_226\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4631:4770   */\n    tag_303:\n        /* \"#utility.yul\":4415:4777   */\n      pop\n        /* \"#utility.yul\":4367:4777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:4963   */\n    tag_229:\n        /* \"#utility.yul\":4831:4908   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4828:4829   */\n      0x00\n        /* \"#utility.yul\":4821:4909   */\n      mstore\n        /* \"#utility.yul\":4928:4932   */\n      0x12\n        /* \"#utility.yul\":4925:4926   */\n      0x04\n        /* \"#utility.yul\":4918:4933   */\n      mstore\n        /* \"#utility.yul\":4952:4956   */\n      0x24\n        /* \"#utility.yul\":4949:4950   */\n      0x00\n        /* \"#utility.yul\":4942:4957   */\n      revert\n        /* \"#utility.yul\":4969:5154   */\n    tag_157:\n        /* \"#utility.yul\":5009:5010   */\n      0x00\n        /* \"#utility.yul\":5026:5046   */\n      tag_307\n        /* \"#utility.yul\":5044:5045   */\n      dup3\n        /* \"#utility.yul\":5026:5046   */\n      tag_219\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":5021:5046   */\n      swap2\n      pop\n        /* \"#utility.yul\":5060:5080   */\n      tag_308\n        /* \"#utility.yul\":5078:5079   */\n      dup4\n        /* \"#utility.yul\":5060:5080   */\n      tag_219\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5055:5080   */\n      swap3\n      pop\n        /* \"#utility.yul\":5099:5100   */\n      dup3\n        /* \"#utility.yul\":5089:5124   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":5104:5122   */\n      tag_310\n      tag_229\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":5089:5124   */\n    tag_309:\n        /* \"#utility.yul\":5146:5147   */\n      dup3\n        /* \"#utility.yul\":5143:5144   */\n      dup3\n        /* \"#utility.yul\":5139:5148   */\n      div\n        /* \"#utility.yul\":5134:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":4969:5154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5160:5492   */\n    tag_161:\n        /* \"#utility.yul\":5281:5285   */\n      0x00\n        /* \"#utility.yul\":5319:5321   */\n      0x40\n        /* \"#utility.yul\":5308:5317   */\n      dup3\n        /* \"#utility.yul\":5304:5322   */\n      add\n        /* \"#utility.yul\":5296:5322   */\n      swap1\n      pop\n        /* \"#utility.yul\":5332:5403   */\n      tag_312\n        /* \"#utility.yul\":5400:5401   */\n      0x00\n        /* \"#utility.yul\":5389:5398   */\n      dup4\n        /* \"#utility.yul\":5385:5402   */\n      add\n        /* \"#utility.yul\":5376:5382   */\n      dup6\n        /* \"#utility.yul\":5332:5403   */\n      tag_225\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5413:5485   */\n      tag_313\n        /* \"#utility.yul\":5481:5483   */\n      0x20\n        /* \"#utility.yul\":5470:5479   */\n      dup4\n        /* \"#utility.yul\":5466:5484   */\n      add\n        /* \"#utility.yul\":5457:5463   */\n      dup5\n        /* \"#utility.yul\":5413:5485   */\n      tag_220\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":5160:5492   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5498:5645   */\n    tag_230:\n        /* \"#utility.yul\":5599:5610   */\n      0x00\n        /* \"#utility.yul\":5636:5639   */\n      dup2\n        /* \"#utility.yul\":5621:5639   */\n      swap1\n      pop\n        /* \"#utility.yul\":5498:5645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5651:5765   */\n    tag_231:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5771:6169   */\n    tag_232:\n        /* \"#utility.yul\":5930:5933   */\n      0x00\n        /* \"#utility.yul\":5951:6034   */\n      tag_317\n        /* \"#utility.yul\":6032:6033   */\n      0x00\n        /* \"#utility.yul\":6027:6030   */\n      dup4\n        /* \"#utility.yul\":5951:6034   */\n      tag_230\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5944:6034   */\n      swap2\n      pop\n        /* \"#utility.yul\":6043:6136   */\n      tag_318\n        /* \"#utility.yul\":6132:6135   */\n      dup3\n        /* \"#utility.yul\":6043:6136   */\n      tag_231\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6161:6162   */\n      0x00\n        /* \"#utility.yul\":6156:6159   */\n      dup3\n        /* \"#utility.yul\":6152:6163   */\n      add\n        /* \"#utility.yul\":6145:6163   */\n      swap1\n      pop\n        /* \"#utility.yul\":5771:6169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6175:6554   */\n    tag_175:\n        /* \"#utility.yul\":6359:6362   */\n      0x00\n        /* \"#utility.yul\":6381:6528   */\n      tag_320\n        /* \"#utility.yul\":6524:6527   */\n      dup3\n        /* \"#utility.yul\":6381:6528   */\n      tag_232\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6374:6528   */\n      swap2\n      pop\n        /* \"#utility.yul\":6545:6548   */\n      dup2\n        /* \"#utility.yul\":6538:6548   */\n      swap1\n      pop\n        /* \"#utility.yul\":6175:6554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6560:6650   */\n    tag_233:\n        /* \"#utility.yul\":6594:6601   */\n      0x00\n        /* \"#utility.yul\":6637:6642   */\n      dup2\n        /* \"#utility.yul\":6630:6643   */\n      iszero\n        /* \"#utility.yul\":6623:6644   */\n      iszero\n        /* \"#utility.yul\":6612:6644   */\n      swap1\n      pop\n        /* \"#utility.yul\":6560:6650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6656:6772   */\n    tag_234:\n        /* \"#utility.yul\":6726:6747   */\n      tag_323\n        /* \"#utility.yul\":6741:6746   */\n      dup2\n        /* \"#utility.yul\":6726:6747   */\n      tag_233\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":6719:6724   */\n      dup2\n        /* \"#utility.yul\":6716:6748   */\n      eq\n        /* \"#utility.yul\":6706:6766   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":6762:6763   */\n      0x00\n        /* \"#utility.yul\":6759:6760   */\n      dup1\n        /* \"#utility.yul\":6752:6764   */\n      revert\n        /* \"#utility.yul\":6706:6766   */\n    tag_324:\n        /* \"#utility.yul\":6656:6772   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6778:6915   */\n    tag_235:\n        /* \"#utility.yul\":6832:6837   */\n      0x00\n        /* \"#utility.yul\":6863:6869   */\n      dup2\n        /* \"#utility.yul\":6857:6870   */\n      mload\n        /* \"#utility.yul\":6848:6870   */\n      swap1\n      pop\n        /* \"#utility.yul\":6879:6909   */\n      tag_326\n        /* \"#utility.yul\":6903:6908   */\n      dup2\n        /* \"#utility.yul\":6879:6909   */\n      tag_234\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6778:6915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6921:7266   */\n    tag_185:\n        /* \"#utility.yul\":6988:6994   */\n      0x00\n        /* \"#utility.yul\":7037:7039   */\n      0x20\n        /* \"#utility.yul\":7025:7034   */\n      dup3\n        /* \"#utility.yul\":7016:7023   */\n      dup5\n        /* \"#utility.yul\":7012:7035   */\n      sub\n        /* \"#utility.yul\":7008:7040   */\n      slt\n        /* \"#utility.yul\":7005:7124   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":7043:7122   */\n      tag_329\n      tag_214\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":7005:7124   */\n    tag_328:\n        /* \"#utility.yul\":7163:7164   */\n      0x00\n        /* \"#utility.yul\":7188:7249   */\n      tag_330\n        /* \"#utility.yul\":7241:7248   */\n      dup5\n        /* \"#utility.yul\":7232:7238   */\n      dup3\n        /* \"#utility.yul\":7221:7230   */\n      dup6\n        /* \"#utility.yul\":7217:7239   */\n      add\n        /* \"#utility.yul\":7188:7249   */\n      tag_235\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7178:7249   */\n      swap2\n      pop\n        /* \"#utility.yul\":7134:7259   */\n      pop\n        /* \"#utility.yul\":6921:7266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7272:7370   */\n    tag_236:\n        /* \"#utility.yul\":7323:7329   */\n      0x00\n        /* \"#utility.yul\":7357:7362   */\n      dup2\n        /* \"#utility.yul\":7351:7363   */\n      mload\n        /* \"#utility.yul\":7341:7363   */\n      swap1\n      pop\n        /* \"#utility.yul\":7272:7370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7376:7622   */\n    tag_237:\n        /* \"#utility.yul\":7457:7458   */\n      0x00\n        /* \"#utility.yul\":7467:7580   */\n    tag_333:\n        /* \"#utility.yul\":7481:7487   */\n      dup4\n        /* \"#utility.yul\":7478:7479   */\n      dup2\n        /* \"#utility.yul\":7475:7488   */\n      lt\n        /* \"#utility.yul\":7467:7580   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":7566:7567   */\n      dup1\n        /* \"#utility.yul\":7561:7564   */\n      dup3\n        /* \"#utility.yul\":7557:7568   */\n      add\n        /* \"#utility.yul\":7551:7569   */\n      mload\n        /* \"#utility.yul\":7547:7548   */\n      dup2\n        /* \"#utility.yul\":7542:7545   */\n      dup5\n        /* \"#utility.yul\":7538:7549   */\n      add\n        /* \"#utility.yul\":7531:7570   */\n      mstore\n        /* \"#utility.yul\":7503:7505   */\n      0x20\n        /* \"#utility.yul\":7500:7501   */\n      dup2\n        /* \"#utility.yul\":7496:7506   */\n      add\n        /* \"#utility.yul\":7491:7506   */\n      swap1\n      pop\n        /* \"#utility.yul\":7467:7580   */\n      jump(tag_333)\n    tag_335:\n        /* \"#utility.yul\":7614:7615   */\n      0x00\n        /* \"#utility.yul\":7605:7611   */\n      dup5\n        /* \"#utility.yul\":7600:7603   */\n      dup5\n        /* \"#utility.yul\":7596:7612   */\n      add\n        /* \"#utility.yul\":7589:7616   */\n      mstore\n        /* \"#utility.yul\":7438:7622   */\n      pop\n        /* \"#utility.yul\":7376:7622   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7628:8014   */\n    tag_238:\n        /* \"#utility.yul\":7732:7735   */\n      0x00\n        /* \"#utility.yul\":7760:7798   */\n      tag_337\n        /* \"#utility.yul\":7792:7797   */\n      dup3\n        /* \"#utility.yul\":7760:7798   */\n      tag_236\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":7814:7902   */\n      tag_338\n        /* \"#utility.yul\":7895:7901   */\n      dup2\n        /* \"#utility.yul\":7890:7893   */\n      dup6\n        /* \"#utility.yul\":7814:7902   */\n      tag_230\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":7807:7902   */\n      swap4\n      pop\n        /* \"#utility.yul\":7911:7976   */\n      tag_339\n        /* \"#utility.yul\":7969:7975   */\n      dup2\n        /* \"#utility.yul\":7964:7967   */\n      dup6\n        /* \"#utility.yul\":7957:7961   */\n      0x20\n        /* \"#utility.yul\":7950:7955   */\n      dup7\n        /* \"#utility.yul\":7946:7962   */\n      add\n        /* \"#utility.yul\":7911:7976   */\n      tag_237\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":8001:8007   */\n      dup1\n        /* \"#utility.yul\":7996:7999   */\n      dup5\n        /* \"#utility.yul\":7992:8008   */\n      add\n        /* \"#utility.yul\":7985:8008   */\n      swap2\n      pop\n        /* \"#utility.yul\":7736:8014   */\n      pop\n        /* \"#utility.yul\":7628:8014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8020:8291   */\n    tag_196:\n        /* \"#utility.yul\":8150:8153   */\n      0x00\n        /* \"#utility.yul\":8172:8265   */\n      tag_341\n        /* \"#utility.yul\":8261:8264   */\n      dup3\n        /* \"#utility.yul\":8252:8258   */\n      dup5\n        /* \"#utility.yul\":8172:8265   */\n      tag_238\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":8165:8265   */\n      swap2\n      pop\n        /* \"#utility.yul\":8282:8285   */\n      dup2\n        /* \"#utility.yul\":8275:8285   */\n      swap1\n      pop\n        /* \"#utility.yul\":8020:8291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201f83ca4cb6fa3f5f83ddb68c9cfce929e8afc115e0464550968802e8cf16e68564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_361": {
									"entryPoint": null,
									"id": 361,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_58": {
									"entryPoint": null,
									"id": 58,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_457": {
									"entryPoint": 242,
									"id": 457,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64_fromMemory": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 438,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2239:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "889:57:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "899:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "914:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "921:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "910:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:30:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "899:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "871:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "881:7:7",
														"type": ""
													}
												],
												"src": "845:101:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "994:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1050:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1059:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1062:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1052:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1052:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1052:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1017:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1041:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nodeType": "YulIdentifier",
																					"src": "1024:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1024:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1014:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1014:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1007:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1007:42:7"
															},
															"nodeType": "YulIf",
															"src": "1004:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "987:5:7",
														"type": ""
													}
												],
												"src": "952:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1140:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1150:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1165:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1159:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1150:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1207:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "1181:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1181:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1118:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1126:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1134:5:7",
														"type": ""
													}
												],
												"src": "1078:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1334:550:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1380:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1382:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1382:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1355:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1364:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1351:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1351:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1376:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1347:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1347:32:7"
															},
															"nodeType": "YulIf",
															"src": "1344:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1473:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1488:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1502:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1492:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1517:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1563:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1574:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1559:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1559:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1583:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1527:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1527:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1517:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1611:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1626:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1630:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1656:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1701:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1712:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1697:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1697:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1721:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1666:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1666:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1656:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1749:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1764:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1778:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1768:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1794:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1839:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1850:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1835:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1835:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1859:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1804:30:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1804:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1794:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1288:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1299:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1311:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1319:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1327:6:7",
														"type": ""
													}
												],
												"src": "1225:659:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1955:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1972:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1995:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1977:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1977:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1965:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1965:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1965:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1943:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1950:3:7",
														"type": ""
													}
												],
												"src": "1890:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2112:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2122:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2134:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2145:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2130:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2122:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2202:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2215:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2226:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2211:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2211:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2158:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2158:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2158:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2084:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2096:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2107:4:7",
														"type": ""
													}
												],
												"src": "2014:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64t_uint64_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040526040516200149f3803806200149f833981810160405281019062000029919062000265565b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200009f5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000969190620002d2565b60405180910390fd5b620000b081620000f260201b60201c565b508167ffffffffffffffff1660808167ffffffffffffffff16815250508067ffffffffffffffff1660a08167ffffffffffffffff1681525050505050620002ef565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001e882620001bb565b9050919050565b620001fa81620001db565b81146200020657600080fd5b50565b6000815190506200021a81620001ef565b92915050565b600067ffffffffffffffff82169050919050565b6200023f8162000220565b81146200024b57600080fd5b50565b6000815190506200025f8162000234565b92915050565b600080600060608486031215620002815762000280620001b6565b5b6000620002918682870162000209565b9350506020620002a4868287016200024e565b9250506040620002b7868287016200024e565b9150509250925092565b620002cc81620001db565b82525050565b6000602082019050620002e96000830184620002c1565b92915050565b60805160a05161118a62000315600039600061038c0152600061064b015261118a6000f3fe6080604052600436106100e15760003560e01c8063961325211161007f578063be9a655511610059578063be9a6555146102b9578063efbe1c1c146102e4578063f2fde38b1461030f578063fbccedae14610338576100e8565b806396132521146102145780639852595c1461023f578063a3f8eace1461027c576100e8565b8063715018a6116100bb578063715018a61461017e578063810ec23b1461019557806386d1a69f146101d25780638da5cb5b146101e9576100e8565b80630a17b06b146100ed5780630fb5a6b41461012a5780631916558714610155576100e8565b366100e857005b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190610d1b565b610363565b6040516101219190610d61565b60405180910390f35b34801561013657600080fd5b5061013f610388565b60405161014c9190610d61565b60405180910390f35b34801561016157600080fd5b5061017c60048036038101906101779190610dda565b6103ba565b005b34801561018a57600080fd5b50610193610481565b005b3480156101a157600080fd5b506101bc60048036038101906101b79190610e07565b610495565b6040516101c99190610d61565b60405180910390f35b3480156101de57600080fd5b506101e7610535565b005b3480156101f557600080fd5b506101fe6105a5565b60405161020b9190610e56565b60405180910390f35b34801561022057600080fd5b506102296105ce565b6040516102369190610d61565b60405180910390f35b34801561024b57600080fd5b5061026660048036038101906102619190610dda565b6105d8565b6040516102739190610d61565b60405180910390f35b34801561028857600080fd5b506102a3600480360381019061029e9190610dda565b610621565b6040516102b09190610d61565b60405180910390f35b3480156102c557600080fd5b506102ce610647565b6040516102db9190610d61565b60405180910390f35b3480156102f057600080fd5b506102f9610679565b6040516103069190610d61565b60405180910390f35b34801561031b57600080fd5b5061033660048036038101906103319190610dda565b61069a565b005b34801561034457600080fd5b5061034d610720565b60405161035a9190610d61565b60405180910390f35b60006103816103706105ce565b4761037b9190610ea0565b83610742565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60006103c582610621565b905080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104169190610ea0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b826040516104639190610d61565b60405180910390a261047d826104776105a5565b836107c9565b5050565b610489610848565b61049360006108cf565b565b600061052d6104a3846105d8565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104dc9190610e56565b602060405180830381865afa1580156104f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190610f00565b6105279190610ea0565b83610742565b905092915050565b600061053f610720565b905080600160008282546105539190610ea0565b925050819055507fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b816040516105899190610d61565b60405180910390a16105a261059c6105a5565b82610993565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061062c826105d8565b6106368342610495565b6106409190610f2d565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b6000610683610388565b61068b610647565b6106959190610ea0565b905090565b6106a2610848565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107145760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161070b9190610e56565b60405180910390fd5b61071d816108cf565b50565b600061072a6105ce565b61073342610363565b61073d9190610f2d565b905090565b600061074c610647565b8267ffffffffffffffff16101561076657600090506107c3565b61076e610679565b8267ffffffffffffffff1610610786578290506107c3565b61078e610388565b610796610647565b8367ffffffffffffffff166107ab9190610f2d565b846107b69190610f61565b6107c09190610fd2565b90505b92915050565b610843838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016107fc929190611003565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a80565b505050565b610850610b17565b73ffffffffffffffffffffffffffffffffffffffff1661086e6105a5565b73ffffffffffffffffffffffffffffffffffffffff16146108cd57610891610b17565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108c49190610e56565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b804710156109d857306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016109cf9190610e56565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516109fe9061105d565b60006040518083038185875af1925050503d8060008114610a3b576040519150601f19603f3d011682016040523d82523d6000602084013e610a40565b606091505b5050905080610a7b576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000610aab828473ffffffffffffffffffffffffffffffffffffffff16610b1f90919063ffffffff16565b90506000815114158015610ad0575080806020019051810190610ace91906110aa565b155b15610b1257826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610b099190610e56565b60405180910390fd5b505050565b600033905090565b6060610b2d83836000610b35565b905092915050565b606081471015610b7c57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610b739190610e56565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051610ba5919061113d565b60006040518083038185875af1925050503d8060008114610be2576040519150601f19603f3d011682016040523d82523d6000602084013e610be7565b606091505b5091509150610bf7868383610c02565b925050509392505050565b606082610c1757610c1282610c91565b610c89565b60008251148015610c3f575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15610c8157836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610c789190610e56565b60405180910390fd5b819050610c8a565b5b9392505050565b600081511115610ca45780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b600067ffffffffffffffff82169050919050565b610cf881610cdb565b8114610d0357600080fd5b50565b600081359050610d1581610cef565b92915050565b600060208284031215610d3157610d30610cd6565b5b6000610d3f84828501610d06565b91505092915050565b6000819050919050565b610d5b81610d48565b82525050565b6000602082019050610d766000830184610d52565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610da782610d7c565b9050919050565b610db781610d9c565b8114610dc257600080fd5b50565b600081359050610dd481610dae565b92915050565b600060208284031215610df057610def610cd6565b5b6000610dfe84828501610dc5565b91505092915050565b60008060408385031215610e1e57610e1d610cd6565b5b6000610e2c85828601610dc5565b9250506020610e3d85828601610d06565b9150509250929050565b610e5081610d9c565b82525050565b6000602082019050610e6b6000830184610e47565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eab82610d48565b9150610eb683610d48565b9250828201905080821115610ece57610ecd610e71565b5b92915050565b610edd81610d48565b8114610ee857600080fd5b50565b600081519050610efa81610ed4565b92915050565b600060208284031215610f1657610f15610cd6565b5b6000610f2484828501610eeb565b91505092915050565b6000610f3882610d48565b9150610f4383610d48565b9250828203905081811115610f5b57610f5a610e71565b5b92915050565b6000610f6c82610d48565b9150610f7783610d48565b9250828202610f8581610d48565b91508282048414831517610f9c57610f9b610e71565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fdd82610d48565b9150610fe883610d48565b925082610ff857610ff7610fa3565b5b828204905092915050565b60006040820190506110186000830185610e47565b6110256020830184610d52565b9392505050565b600081905092915050565b50565b600061104760008361102c565b915061105282611037565b600082019050919050565b60006110688261103a565b9150819050919050565b60008115159050919050565b61108781611072565b811461109257600080fd5b50565b6000815190506110a48161107e565b92915050565b6000602082840312156110c0576110bf610cd6565b5b60006110ce84828501611095565b91505092915050565b600081519050919050565b60005b838110156111005780820151818401526020810190506110e5565b60008484015250505050565b6000611117826110d7565b611121818561102c565b93506111318185602086016110e2565b80840191505092915050565b6000611149828461110c565b91508190509291505056fea26469706673582212201f83ca4cb6fa3f5f83ddb68c9cfce929e8afc115e0464550968802e8cf16e68564736f6c63430008120033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0x149F CODESIZE SUB DUP1 PUSH3 0x149F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x29 SWAP2 SWAP1 PUSH3 0x265 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x9F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x96 SWAP2 SWAP1 PUSH3 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xB0 DUP2 PUSH3 0xF2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x2EF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E8 DUP3 PUSH3 0x1BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1FA DUP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 EQ PUSH3 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x21A DUP2 PUSH3 0x1EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x23F DUP2 PUSH3 0x220 JUMP JUMPDEST DUP2 EQ PUSH3 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x25F DUP2 PUSH3 0x234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x281 JUMPI PUSH3 0x280 PUSH3 0x1B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x291 DUP7 DUP3 DUP8 ADD PUSH3 0x209 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2A4 DUP7 DUP3 DUP8 ADD PUSH3 0x24E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2B7 DUP7 DUP3 DUP8 ADD PUSH3 0x24E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x2CC DUP2 PUSH3 0x1DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x118A PUSH3 0x315 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x38C ADD MSTORE PUSH1 0x0 PUSH2 0x64B ADD MSTORE PUSH2 0x118A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96132521 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x338 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x96132521 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x27C JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E9 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x155 JUMPI PUSH2 0xE8 JUMP JUMPDEST CALLDATASIZE PUSH2 0xE8 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x481 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x535 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x381 PUSH2 0x370 PUSH2 0x5CE JUMP JUMPDEST SELFBALANCE PUSH2 0x37B SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST DUP4 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5 DUP3 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x47D DUP3 PUSH2 0x477 PUSH2 0x5A5 JUMP JUMPDEST DUP4 PUSH2 0x7C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x489 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x493 PUSH1 0x0 PUSH2 0x8CF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D PUSH2 0x4A3 DUP5 PUSH2 0x5D8 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x527 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST DUP4 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53F PUSH2 0x720 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B DUP2 PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x5A2 PUSH2 0x59C PUSH2 0x5A5 JUMP JUMPDEST DUP3 PUSH2 0x993 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62C DUP3 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x636 DUP4 TIMESTAMP PUSH2 0x495 JUMP JUMPDEST PUSH2 0x640 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x683 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x68B PUSH2 0x647 JUMP JUMPDEST PUSH2 0x695 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x714 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70B SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71D DUP2 PUSH2 0x8CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72A PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x733 TIMESTAMP PUSH2 0x363 JUMP JUMPDEST PUSH2 0x73D SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74C PUSH2 0x647 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x76E PUSH2 0x679 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x786 JUMPI DUP3 SWAP1 POP PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x78E PUSH2 0x388 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x647 JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST DUP5 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x7C0 SWAP2 SWAP1 PUSH2 0xFD2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x843 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7FC SWAP3 SWAP2 SWAP1 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xA80 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x850 PUSH2 0xB17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x86E PUSH2 0x5A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8CD JUMPI PUSH2 0x891 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x9D8 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9FE SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xAD0 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB12 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB09 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB2D DUP4 DUP4 PUSH1 0x0 PUSH2 0xB35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xB7C JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB73 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xBF7 DUP7 DUP4 DUP4 PUSH2 0xC02 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xC17 JUMPI PUSH2 0xC12 DUP3 PUSH2 0xC91 JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xC3F JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xC81 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xC8A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xCA4 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF8 DUP2 PUSH2 0xCDB JUMP JUMPDEST DUP2 EQ PUSH2 0xD03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD15 DUP2 PUSH2 0xCEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD31 JUMPI PUSH2 0xD30 PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD3F DUP5 DUP3 DUP6 ADD PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD76 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA7 DUP3 PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB7 DUP2 PUSH2 0xD9C JUMP JUMPDEST DUP2 EQ PUSH2 0xDC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD4 DUP2 PUSH2 0xDAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF0 JUMPI PUSH2 0xDEF PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDFE DUP5 DUP3 DUP6 ADD PUSH2 0xDC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE1E JUMPI PUSH2 0xE1D PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE2C DUP6 DUP3 DUP7 ADD PUSH2 0xDC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE3D DUP6 DUP3 DUP7 ADD PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xD9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEAB DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB6 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xE71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEDD DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP2 EQ PUSH2 0xEE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEFA DUP2 PUSH2 0xED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF16 JUMPI PUSH2 0xF15 PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF24 DUP5 DUP3 DUP6 ADD PUSH2 0xEEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF38 DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xF43 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF5B JUMPI PUSH2 0xF5A PUSH2 0xE71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6C DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xF77 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF85 DUP2 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0xE71 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFDD DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE8 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFF8 JUMPI PUSH2 0xFF7 PUSH2 0xFA3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1018 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x1025 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1047 PUSH1 0x0 DUP4 PUSH2 0x102C JUMP JUMPDEST SWAP2 POP PUSH2 0x1052 DUP3 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1068 DUP3 PUSH2 0x103A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1087 DUP2 PUSH2 0x1072 JUMP JUMPDEST DUP2 EQ PUSH2 0x1092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10A4 DUP2 PUSH2 0x107E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C0 JUMPI PUSH2 0x10BF PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CE DUP5 DUP3 DUP6 ADD PUSH2 0x1095 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1100 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1117 DUP3 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x1121 DUP2 DUP6 PUSH2 0x102C JUMP JUMPDEST SWAP4 POP PUSH2 0x1131 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10E2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1149 DUP3 DUP5 PUSH2 0x110C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F DUP4 0xCA 0x4C 0xB6 STATICCALL EXTCODEHASH 0x5F DUP4 0xDD 0xB6 DUP13 SWAP13 0xFC 0xE9 0x29 0xE8 0xAF 0xC1 ISZERO 0xE0 CHAINID GASLIMIT POP SWAP7 DUP9 MUL 0xE8 0xCF AND 0xE6 DUP6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "1638:4032:0:-:0;;;2143:186;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2239:11;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;2271:14:0::1;2262:23;;;;;;;;::::0;::::1;2307:15;2295:27;;;;;;;;::::0;::::1;2143:186:::0;;;1638:4032;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:101::-;881:7;921:18;914:5;910:30;899:41;;845:101;;;:::o;952:120::-;1024:23;1041:5;1024:23;:::i;:::-;1017:5;1014:34;1004:62;;1062:1;1059;1052:12;1004:62;952:120;:::o;1078:141::-;1134:5;1165:6;1159:13;1150:22;;1181:32;1207:5;1181:32;:::i;:::-;1078:141;;;;:::o;1225:659::-;1311:6;1319;1327;1376:2;1364:9;1355:7;1351:23;1347:32;1344:119;;;1382:79;;:::i;:::-;1344:119;1502:1;1527:64;1583:7;1574:6;1563:9;1559:22;1527:64;:::i;:::-;1517:74;;1473:128;1640:2;1666:63;1721:7;1712:6;1701:9;1697:22;1666:63;:::i;:::-;1656:73;;1611:128;1778:2;1804:63;1859:7;1850:6;1839:9;1835:22;1804:63;:::i;:::-;1794:73;;1749:128;1225:659;;;;;:::o;1890:118::-;1977:24;1995:5;1977:24;:::i;:::-;1972:3;1965:37;1890:118;;:::o;2014:222::-;2107:4;2145:2;2134:9;2130:18;2122:26;;2158:71;2226:1;2215:9;2211:17;2202:6;2158:71;:::i;:::-;2014:222;;;;:::o;1638:4032:0:-;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_63": {
									"entryPoint": null,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_812": {
									"entryPoint": 2688,
									"id": 812,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_395": {
									"entryPoint": 2120,
									"id": 395,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1127": {
									"entryPoint": 2839,
									"id": 1127,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1114": {
									"entryPoint": 3217,
									"id": 1114,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_457": {
									"entryPoint": 2255,
									"id": 457,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_vestingSchedule_309": {
									"entryPoint": 1858,
									"id": 309,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@duration_81": {
									"entryPoint": 904,
									"id": 81,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@end_94": {
									"entryPoint": 1657,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionCallWithValue_982": {
									"entryPoint": 2869,
									"id": 982,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_936": {
									"entryPoint": 2847,
									"id": 936,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_378": {
									"entryPoint": 1445,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releasable_134": {
									"entryPoint": 1824,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releasable_156": {
									"entryPoint": 1569,
									"id": 156,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@release_185": {
									"entryPoint": 1333,
									"id": 185,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@release_220": {
									"entryPoint": 954,
									"id": 220,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@released_103": {
									"entryPoint": 1486,
									"id": 103,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@released_116": {
									"entryPoint": 1496,
									"id": 116,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceOwnership_409": {
									"entryPoint": 1153,
									"id": 409,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_622": {
									"entryPoint": 1993,
									"id": 622,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sendValue_919": {
									"entryPoint": 2451,
									"id": 919,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@start_72": {
									"entryPoint": 1607,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_437": {
									"entryPoint": 1690,
									"id": 437,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1074": {
									"entryPoint": 3074,
									"id": 1074,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@vestedAmount_241": {
									"entryPoint": 867,
									"id": 241,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@vestedAmount_269": {
									"entryPoint": 1173,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64": {
									"entryPoint": 3334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint64": {
									"entryPoint": 3591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64": {
									"entryPoint": 3355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4099,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 3291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4322,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4003,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3286,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 4151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 3311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8294:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:57:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:30:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:7",
														"type": ""
													}
												],
												"src": "334:101:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "483:78:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "539:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "548:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "551:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "541:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "541:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "541:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "506:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "530:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nodeType": "YulIdentifier",
																					"src": "513:16:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "513:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "503:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "503:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "496:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "496:42:7"
															},
															"nodeType": "YulIf",
															"src": "493:62:7"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "476:5:7",
														"type": ""
													}
												],
												"src": "441:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "618:86:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "628:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "650:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "637:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "637:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "628:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "692:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "666:25:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "666:32:7"
														}
													]
												},
												"name": "abi_decode_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "596:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "604:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "612:5:7",
														"type": ""
													}
												],
												"src": "567:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "775:262:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "821:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "823:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "823:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "823:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "796:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "805:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "792:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "792:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "817:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "788:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:32:7"
															},
															"nodeType": "YulIf",
															"src": "785:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "914:116:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "929:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "943:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "933:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "958:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "992:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1003:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "988:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "988:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1012:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "968:19:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "968:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "958:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "768:6:7",
														"type": ""
													}
												],
												"src": "710:327:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1088:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1098:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1109:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1098:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1070:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1080:7:7",
														"type": ""
													}
												],
												"src": "1043:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1191:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1208:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1231:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1213:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1213:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1201:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1201:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1201:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1179:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1186:3:7",
														"type": ""
													}
												],
												"src": "1126:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1348:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1358:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1370:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1381:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1366:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1366:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1358:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1438:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1451:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1462:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1447:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1447:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1394:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1394:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1394:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1320:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1332:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1343:4:7",
														"type": ""
													}
												],
												"src": "1250:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1533:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1548:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1555:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1533:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1505:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1515:7:7",
														"type": ""
													}
												],
												"src": "1478:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1655:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1665:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1694:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1676:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1676:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1665:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1637:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1647:7:7",
														"type": ""
													}
												],
												"src": "1610:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1755:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1812:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1821:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1824:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1814:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1814:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1778:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1803:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1785:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1785:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1775:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1775:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1768:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1768:43:7"
															},
															"nodeType": "YulIf",
															"src": "1765:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1748:5:7",
														"type": ""
													}
												],
												"src": "1712:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1892:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1902:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1924:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1911:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1911:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1902:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1967:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1940:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1940:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1870:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1878:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1886:5:7",
														"type": ""
													}
												],
												"src": "1840:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2051:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2097:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2099:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2099:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2099:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2072:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2081:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2068:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2068:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2093:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2064:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2064:32:7"
															},
															"nodeType": "YulIf",
															"src": "2061:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2190:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2205:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2219:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2209:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2234:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2269:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2280:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2265:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2265:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2289:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2244:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2234:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2021:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2032:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2044:6:7",
														"type": ""
													}
												],
												"src": "1985:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2402:390:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2448:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2450:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2450:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2450:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2423:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2432:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2419:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2419:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2444:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2415:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:32:7"
															},
															"nodeType": "YulIf",
															"src": "2412:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2541:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2556:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2570:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2560:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2585:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2620:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2631:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2616:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2616:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2640:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2595:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2585:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2668:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2683:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2697:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2687:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2713:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2747:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2758:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2743:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2743:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2767:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "2723:19:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2723:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2713:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2364:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2375:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2387:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2395:6:7",
														"type": ""
													}
												],
												"src": "2320:472:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2863:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2880:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2903:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2885:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2885:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2873:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2873:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2851:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2858:3:7",
														"type": ""
													}
												],
												"src": "2798:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3020:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3030:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3042:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3053:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3038:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3038:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3030:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3110:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3123:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3134:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3119:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3119:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3066:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3066:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3066:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3004:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3015:4:7",
														"type": ""
													}
												],
												"src": "2922:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3178:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3195:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3198:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3188:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3188:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3188:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3292:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3295:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3285:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3285:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3285:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3316:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3319:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3309:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3309:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3309:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3150:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3380:147:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3390:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3413:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3395:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3395:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3390:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3424:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3447:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3429:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3429:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3424:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3458:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3469:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3472:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3465:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3458:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3498:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3500:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3500:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3500:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3490:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3493:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3487:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3487:10:7"
															},
															"nodeType": "YulIf",
															"src": "3484:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3367:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3370:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3376:3:7",
														"type": ""
													}
												],
												"src": "3336:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3576:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3633:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3642:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3645:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3635:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3635:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3635:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3599:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3624:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3606:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3606:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3596:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3596:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3589:43:7"
															},
															"nodeType": "YulIf",
															"src": "3586:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3569:5:7",
														"type": ""
													}
												],
												"src": "3533:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3724:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3734:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3749:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3743:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3734:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3792:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3765:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3765:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3765:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3702:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3710:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3718:5:7",
														"type": ""
													}
												],
												"src": "3661:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3887:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3933:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3935:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3935:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3935:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3908:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3917:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3904:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3904:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:32:7"
															},
															"nodeType": "YulIf",
															"src": "3897:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4026:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4041:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4045:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4070:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4080:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4080:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4070:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3857:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3868:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3880:6:7",
														"type": ""
													}
												],
												"src": "3810:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4212:149:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4222:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4245:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4227:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4227:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4222:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4256:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4279:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4261:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4261:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4256:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4290:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4302:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4305:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4298:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4298:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4290:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4332:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4334:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4334:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4334:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4323:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4329:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4320:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4320:11:7"
															},
															"nodeType": "YulIf",
															"src": "4317:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4198:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4201:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4207:4:7",
														"type": ""
													}
												],
												"src": "4167:194:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4415:362:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4425:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4448:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4430:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4425:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4459:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4482:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4464:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4464:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4459:1:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4493:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4516:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4519:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4512:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4512:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "4497:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4530:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "4559:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4541:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4541:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4530:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4748:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4750:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4750:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4750:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4681:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4674:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4674:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4704:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4711:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4720:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4707:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4707:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4701:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4701:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4654:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4654:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:113:7"
															},
															"nodeType": "YulIf",
															"src": "4631:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4398:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4401:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4407:7:7",
														"type": ""
													}
												],
												"src": "4367:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4811:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4828:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4831:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4821:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4925:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4928:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4918:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4918:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4918:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4949:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4952:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4942:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4942:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4783:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5011:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5021:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5044:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5026:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5026:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5021:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5055:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5078:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5060:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5060:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5055:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5102:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5104:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5104:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5104:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5099:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5092:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:9:7"
															},
															"nodeType": "YulIf",
															"src": "5089:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5134:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5143:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5146:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5139:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5139:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5134:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5000:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5003:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5009:1:7",
														"type": ""
													}
												],
												"src": "4969:185:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5286:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5296:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5308:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5319:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5304:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5304:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5296:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5376:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5389:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5400:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5385:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5385:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5332:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5332:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5332:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5457:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5470:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5481:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5466:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5466:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5413:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5413:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5413:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5250:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5262:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5270:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5281:4:7",
														"type": ""
													}
												],
												"src": "5160:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5611:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5621:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5636:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5621:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5583:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5588:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5599:11:7",
														"type": ""
													}
												],
												"src": "5498:147:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5757:8:7",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5749:6:7",
														"type": ""
													}
												],
												"src": "5651:114:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5934:235:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5944:90:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6027:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6032:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5951:75:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5951:83:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5944:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6132:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "6043:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6043:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6043:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6145:18:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6156:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6161:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6152:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6152:11:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6145:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5922:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5930:3:7",
														"type": ""
													}
												],
												"src": "5771:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6363:191:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6374:154:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6524:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6381:141:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6381:147:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6374:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6538:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6545:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6538:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6350:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:7",
														"type": ""
													}
												],
												"src": "6175:379:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6602:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6612:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6637:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6630:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6630:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6623:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6623:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6612:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6584:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6594:7:7",
														"type": ""
													}
												],
												"src": "6560:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6696:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6750:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6759:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6762:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6752:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6752:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6752:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6719:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6741:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6726:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6726:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6716:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6716:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6709:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6709:40:7"
															},
															"nodeType": "YulIf",
															"src": "6706:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6689:5:7",
														"type": ""
													}
												],
												"src": "6656:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6838:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6848:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6863:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6857:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6857:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6848:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6903:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6879:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6879:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6879:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6816:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6824:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6832:5:7",
														"type": ""
													}
												],
												"src": "6778:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6995:271:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7041:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7043:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7043:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7043:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7016:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7025:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7012:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7012:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7037:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7008:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7008:32:7"
															},
															"nodeType": "YulIf",
															"src": "7005:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "7134:125:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7149:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7163:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7153:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7178:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7221:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7232:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7217:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7217:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7241:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7188:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7188:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7178:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6965:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6976:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6988:6:7",
														"type": ""
													}
												],
												"src": "6921:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7330:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7341:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7357:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7351:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7351:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7341:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7313:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7323:6:7",
														"type": ""
													}
												],
												"src": "7272:98:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7438:184:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7448:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7457:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7452:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7517:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "7542:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7547:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7538:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7538:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "7561:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7566:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7557:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7557:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7551:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7551:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7531:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7531:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7531:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7478:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7481:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7475:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7475:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7489:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7491:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7500:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7503:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7496:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7496:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7491:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7471:3:7",
																"statements": []
															},
															"src": "7467:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7600:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7605:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7596:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7596:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7614:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7589:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7589:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7589:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7420:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7425:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7430:6:7",
														"type": ""
													}
												],
												"src": "7376:246:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7736:278:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7746:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7792:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7760:31:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7760:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7750:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7807:95:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7890:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7895:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7814:75:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7814:88:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7807:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7950:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7957:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7946:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7946:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7964:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7969:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7911:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7911:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7911:65:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7985:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7996:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8001:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7992:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7992:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7717:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7724:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7732:3:7",
														"type": ""
													}
												],
												"src": "7628:386:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8154:137:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8165:100:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8252:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8261:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8172:79:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8172:93:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8165:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8275:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8282:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8275:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8133:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8139:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8150:3:7",
														"type": ""
													}
												],
												"src": "8020:271:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"34": [
									{
										"length": 32,
										"start": 1611
									}
								],
								"36": [
									{
										"length": 32,
										"start": 908
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100e15760003560e01c8063961325211161007f578063be9a655511610059578063be9a6555146102b9578063efbe1c1c146102e4578063f2fde38b1461030f578063fbccedae14610338576100e8565b806396132521146102145780639852595c1461023f578063a3f8eace1461027c576100e8565b8063715018a6116100bb578063715018a61461017e578063810ec23b1461019557806386d1a69f146101d25780638da5cb5b146101e9576100e8565b80630a17b06b146100ed5780630fb5a6b41461012a5780631916558714610155576100e8565b366100e857005b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190610d1b565b610363565b6040516101219190610d61565b60405180910390f35b34801561013657600080fd5b5061013f610388565b60405161014c9190610d61565b60405180910390f35b34801561016157600080fd5b5061017c60048036038101906101779190610dda565b6103ba565b005b34801561018a57600080fd5b50610193610481565b005b3480156101a157600080fd5b506101bc60048036038101906101b79190610e07565b610495565b6040516101c99190610d61565b60405180910390f35b3480156101de57600080fd5b506101e7610535565b005b3480156101f557600080fd5b506101fe6105a5565b60405161020b9190610e56565b60405180910390f35b34801561022057600080fd5b506102296105ce565b6040516102369190610d61565b60405180910390f35b34801561024b57600080fd5b5061026660048036038101906102619190610dda565b6105d8565b6040516102739190610d61565b60405180910390f35b34801561028857600080fd5b506102a3600480360381019061029e9190610dda565b610621565b6040516102b09190610d61565b60405180910390f35b3480156102c557600080fd5b506102ce610647565b6040516102db9190610d61565b60405180910390f35b3480156102f057600080fd5b506102f9610679565b6040516103069190610d61565b60405180910390f35b34801561031b57600080fd5b5061033660048036038101906103319190610dda565b61069a565b005b34801561034457600080fd5b5061034d610720565b60405161035a9190610d61565b60405180910390f35b60006103816103706105ce565b4761037b9190610ea0565b83610742565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b60006103c582610621565b905080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104169190610ea0565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b826040516104639190610d61565b60405180910390a261047d826104776105a5565b836107c9565b5050565b610489610848565b61049360006108cf565b565b600061052d6104a3846105d8565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104dc9190610e56565b602060405180830381865afa1580156104f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190610f00565b6105279190610ea0565b83610742565b905092915050565b600061053f610720565b905080600160008282546105539190610ea0565b925050819055507fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b816040516105899190610d61565b60405180910390a16105a261059c6105a5565b82610993565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600154905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600061062c826105d8565b6106368342610495565b6106409190610f2d565b9050919050565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16905090565b6000610683610388565b61068b610647565b6106959190610ea0565b905090565b6106a2610848565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107145760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161070b9190610e56565b60405180910390fd5b61071d816108cf565b50565b600061072a6105ce565b61073342610363565b61073d9190610f2d565b905090565b600061074c610647565b8267ffffffffffffffff16101561076657600090506107c3565b61076e610679565b8267ffffffffffffffff1610610786578290506107c3565b61078e610388565b610796610647565b8367ffffffffffffffff166107ab9190610f2d565b846107b69190610f61565b6107c09190610fd2565b90505b92915050565b610843838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016107fc929190611003565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a80565b505050565b610850610b17565b73ffffffffffffffffffffffffffffffffffffffff1661086e6105a5565b73ffffffffffffffffffffffffffffffffffffffff16146108cd57610891610b17565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108c49190610e56565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b804710156109d857306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016109cf9190610e56565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516109fe9061105d565b60006040518083038185875af1925050503d8060008114610a3b576040519150601f19603f3d011682016040523d82523d6000602084013e610a40565b606091505b5050905080610a7b576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000610aab828473ffffffffffffffffffffffffffffffffffffffff16610b1f90919063ffffffff16565b90506000815114158015610ad0575080806020019051810190610ace91906110aa565b155b15610b1257826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610b099190610e56565b60405180910390fd5b505050565b600033905090565b6060610b2d83836000610b35565b905092915050565b606081471015610b7c57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610b739190610e56565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051610ba5919061113d565b60006040518083038185875af1925050503d8060008114610be2576040519150601f19603f3d011682016040523d82523d6000602084013e610be7565b606091505b5091509150610bf7868383610c02565b925050509392505050565b606082610c1757610c1282610c91565b610c89565b60008251148015610c3f575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15610c8157836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610c789190610e56565b60405180910390fd5b819050610c8a565b5b9392505050565b600081511115610ca45780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b600067ffffffffffffffff82169050919050565b610cf881610cdb565b8114610d0357600080fd5b50565b600081359050610d1581610cef565b92915050565b600060208284031215610d3157610d30610cd6565b5b6000610d3f84828501610d06565b91505092915050565b6000819050919050565b610d5b81610d48565b82525050565b6000602082019050610d766000830184610d52565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610da782610d7c565b9050919050565b610db781610d9c565b8114610dc257600080fd5b50565b600081359050610dd481610dae565b92915050565b600060208284031215610df057610def610cd6565b5b6000610dfe84828501610dc5565b91505092915050565b60008060408385031215610e1e57610e1d610cd6565b5b6000610e2c85828601610dc5565b9250506020610e3d85828601610d06565b9150509250929050565b610e5081610d9c565b82525050565b6000602082019050610e6b6000830184610e47565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eab82610d48565b9150610eb683610d48565b9250828201905080821115610ece57610ecd610e71565b5b92915050565b610edd81610d48565b8114610ee857600080fd5b50565b600081519050610efa81610ed4565b92915050565b600060208284031215610f1657610f15610cd6565b5b6000610f2484828501610eeb565b91505092915050565b6000610f3882610d48565b9150610f4383610d48565b9250828203905081811115610f5b57610f5a610e71565b5b92915050565b6000610f6c82610d48565b9150610f7783610d48565b9250828202610f8581610d48565b91508282048414831517610f9c57610f9b610e71565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fdd82610d48565b9150610fe883610d48565b925082610ff857610ff7610fa3565b5b828204905092915050565b60006040820190506110186000830185610e47565b6110256020830184610d52565b9392505050565b600081905092915050565b50565b600061104760008361102c565b915061105282611037565b600082019050919050565b60006110688261103a565b9150819050919050565b60008115159050919050565b61108781611072565b811461109257600080fd5b50565b6000815190506110a48161107e565b92915050565b6000602082840312156110c0576110bf610cd6565b5b60006110ce84828501611095565b91505092915050565b600081519050919050565b60005b838110156111005780820151818401526020810190506110e5565b60008484015250505050565b6000611117826110d7565b611121818561102c565b93506111318185602086016110e2565b80840191505092915050565b6000611149828461110c565b91508190509291505056fea26469706673582212201f83ca4cb6fa3f5f83ddb68c9cfce929e8afc115e0464550968802e8cf16e68564736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x96132521 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xBE9A6555 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFBCCEDAE EQ PUSH2 0x338 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x96132521 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x27C JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E9 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0xA17B06B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0x155 JUMPI PUSH2 0xE8 JUMP JUMPDEST CALLDATASIZE PUSH2 0xE8 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xD1B JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x481 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x535 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CE PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x381 PUSH2 0x370 PUSH2 0x5CE JUMP JUMPDEST SELFBALANCE PUSH2 0x37B SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST DUP4 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C5 DUP3 PUSH2 0x621 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x47D DUP3 PUSH2 0x477 PUSH2 0x5A5 JUMP JUMPDEST DUP4 PUSH2 0x7C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x489 PUSH2 0x848 JUMP JUMPDEST PUSH2 0x493 PUSH1 0x0 PUSH2 0x8CF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D PUSH2 0x4A3 DUP5 PUSH2 0x5D8 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x527 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST DUP4 PUSH2 0x742 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53F PUSH2 0x720 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xDA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B DUP2 PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x5A2 PUSH2 0x59C PUSH2 0x5A5 JUMP JUMPDEST DUP3 PUSH2 0x993 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62C DUP3 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x636 DUP4 TIMESTAMP PUSH2 0x495 JUMP JUMPDEST PUSH2 0x640 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x683 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x68B PUSH2 0x647 JUMP JUMPDEST PUSH2 0x695 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x714 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70B SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71D DUP2 PUSH2 0x8CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72A PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x733 TIMESTAMP PUSH2 0x363 JUMP JUMPDEST PUSH2 0x73D SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74C PUSH2 0x647 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x76E PUSH2 0x679 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x786 JUMPI DUP3 SWAP1 POP PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x78E PUSH2 0x388 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x647 JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST DUP5 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x7C0 SWAP2 SWAP1 PUSH2 0xFD2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x843 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7FC SWAP3 SWAP2 SWAP1 PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xA80 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x850 PUSH2 0xB17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x86E PUSH2 0x5A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8CD JUMPI PUSH2 0x891 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x9D8 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9FE SWAP1 PUSH2 0x105D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xAD0 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB12 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB09 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB2D DUP4 DUP4 PUSH1 0x0 PUSH2 0xB35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xB7C JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB73 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xBF7 DUP7 DUP4 DUP4 PUSH2 0xC02 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xC17 JUMPI PUSH2 0xC12 DUP3 PUSH2 0xC91 JUMP JUMPDEST PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xC3F JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xC81 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xC8A JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xCA4 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF8 DUP2 PUSH2 0xCDB JUMP JUMPDEST DUP2 EQ PUSH2 0xD03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD15 DUP2 PUSH2 0xCEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD31 JUMPI PUSH2 0xD30 PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD3F DUP5 DUP3 DUP6 ADD PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD76 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA7 DUP3 PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB7 DUP2 PUSH2 0xD9C JUMP JUMPDEST DUP2 EQ PUSH2 0xDC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD4 DUP2 PUSH2 0xDAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF0 JUMPI PUSH2 0xDEF PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDFE DUP5 DUP3 DUP6 ADD PUSH2 0xDC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE1E JUMPI PUSH2 0xE1D PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE2C DUP6 DUP3 DUP7 ADD PUSH2 0xDC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE3D DUP6 DUP3 DUP7 ADD PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xD9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEAB DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB6 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xE71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEDD DUP2 PUSH2 0xD48 JUMP JUMPDEST DUP2 EQ PUSH2 0xEE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEFA DUP2 PUSH2 0xED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF16 JUMPI PUSH2 0xF15 PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF24 DUP5 DUP3 DUP6 ADD PUSH2 0xEEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF38 DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xF43 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF5B JUMPI PUSH2 0xF5A PUSH2 0xE71 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6C DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xF77 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF85 DUP2 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0xE71 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFDD DUP3 PUSH2 0xD48 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE8 DUP4 PUSH2 0xD48 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFF8 JUMPI PUSH2 0xFF7 PUSH2 0xFA3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1018 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x1025 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD52 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1047 PUSH1 0x0 DUP4 PUSH2 0x102C JUMP JUMPDEST SWAP2 POP PUSH2 0x1052 DUP3 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1068 DUP3 PUSH2 0x103A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1087 DUP2 PUSH2 0x1072 JUMP JUMPDEST DUP2 EQ PUSH2 0x1092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x10A4 DUP2 PUSH2 0x107E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C0 JUMPI PUSH2 0x10BF PUSH2 0xCD6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CE DUP5 DUP3 DUP6 ADD PUSH2 0x1095 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1100 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1117 DUP3 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x1121 DUP2 DUP6 PUSH2 0x102C JUMP JUMPDEST SWAP4 POP PUSH2 0x1131 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10E2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1149 DUP3 DUP5 PUSH2 0x110C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F DUP4 0xCA 0x4C 0xB6 STATICCALL EXTCODEHASH 0x5F DUP4 0xDD 0xB6 DUP13 SWAP13 0xFC 0xE9 0x29 0xE8 0xAF 0xC1 ISZERO 0xE0 CHAINID GASLIMIT POP SWAP7 DUP9 MUL 0xE8 0xCF AND 0xE6 DUP6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "1638:4032:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4613:165;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2662:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4227:246;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:1;;;;;;;;;;;;;:::i;:::-;;4919:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3905:198;;;;;;;;;;;;;:::i;:::-;;1638:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2979:91:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3137:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3608:159;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2510:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2817:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3328:134:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4613:165;4682:7;4708:63;4749:10;:8;:10::i;:::-;4725:21;:34;;;;:::i;:::-;4761:9;4708:16;:63::i;:::-;4701:70;;4613:165;;;:::o;2662:91::-;2711:7;2737:9;2730:16;;;;2662:91;:::o;4227:246::-;4284:14;4301:17;4312:5;4301:10;:17::i;:::-;4284:34;;4353:6;4328:14;:21;4343:5;4328:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;4388:5;4374:28;;;4395:6;4374:28;;;;;;:::i;:::-;;;;;;;;4412:54;4442:5;4450:7;:5;:7::i;:::-;4459:6;4412:22;:54::i;:::-;4274:199;4227:246;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4919:202:0:-;5003:7;5029:85;5087:15;5096:5;5087:8;:15::i;:::-;5053:5;5046:23;;;5078:4;5046:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;:::-;5104:9;5029:16;:85::i;:::-;5022:92;;4919:202;;;;:::o;3905:198::-;3949:14;3966:12;:10;:12::i;:::-;3949:29;;4001:6;3988:9;;:19;;;;;;;:::i;:::-;;;;;;;;4022:21;4036:6;4022:21;;;;;;:::i;:::-;;;;;;;;4053:43;4079:7;:5;:7::i;:::-;4089:6;4053:17;:43::i;:::-;3939:164;3905:198::o;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2979:91:0:-;3028:7;3054:9;;3047:16;;2979:91;:::o;3137:116::-;3199:7;3225:14;:21;3240:5;3225:21;;;;;;;;;;;;;;;;3218:28;;3137:116;;;:::o;3608:159::-;3672:7;3745:15;3754:5;3745:8;:15::i;:::-;3698:44;3711:5;3725:15;3698:12;:44::i;:::-;:62;;;;:::i;:::-;3691:69;;3608:159;;;:::o;2510:85::-;2556:7;2582:6;2575:13;;;;2510:85;:::o;2817:97::-;2861:7;2897:10;:8;:10::i;:::-;2887:7;:5;:7::i;:::-;:20;;;;:::i;:::-;2880:27;;2817:97;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3328:134:0:-;3379:7;3445:10;:8;:10::i;:::-;3405:37;3425:15;3405:12;:37::i;:::-;:50;;;;:::i;:::-;3398:57;;3328:134;:::o;5316:352::-;5416:7;5451;:5;:7::i;:::-;5439:9;:19;;;5435:227;;;5481:1;5474:8;;;;5435:227;5516:5;:3;:5::i;:::-;5503:9;:18;;;5499:163;;5544:15;5537:22;;;;5499:163;5641:10;:8;:10::i;:::-;5629:7;:5;:7::i;:::-;5617:9;:19;;;;;;:::i;:::-;5598:15;:39;;;;:::i;:::-;5597:54;;;;:::i;:::-;5590:61;;5316:352;;;;;:::o;1303:160:4:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1531:331:5:-;1640:6;1616:21;:30;1612:109;;;1704:4;1669:41;;;;;;;;;;;:::i;:::-;;;;;;;;1612:109;1732:12;1750:9;:14;;1772:6;1750:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1731:52;;;1798:7;1793:63;;1828:17;;;;;;;;;;;;;;1793:63;1602:260;1531:331;;:::o;4059:629:4:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;2705:151:5:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:7;197:1;194;187:12;334:101;370:7;410:18;403:5;399:30;388:41;;334:101;;;:::o;441:120::-;513:23;530:5;513:23;:::i;:::-;506:5;503:34;493:62;;551:1;548;541:12;493:62;441:120;:::o;567:137::-;612:5;650:6;637:20;628:29;;666:32;692:5;666:32;:::i;:::-;567:137;;;;:::o;710:327::-;768:6;817:2;805:9;796:7;792:23;788:32;785:119;;;823:79;;:::i;:::-;785:119;943:1;968:52;1012:7;1003:6;992:9;988:22;968:52;:::i;:::-;958:62;;914:116;710:327;;;;:::o;1043:77::-;1080:7;1109:5;1098:16;;1043:77;;;:::o;1126:118::-;1213:24;1231:5;1213:24;:::i;:::-;1208:3;1201:37;1126:118;;:::o;1250:222::-;1343:4;1381:2;1370:9;1366:18;1358:26;;1394:71;1462:1;1451:9;1447:17;1438:6;1394:71;:::i;:::-;1250:222;;;;:::o;1478:126::-;1515:7;1555:42;1548:5;1544:54;1533:65;;1478:126;;;:::o;1610:96::-;1647:7;1676:24;1694:5;1676:24;:::i;:::-;1665:35;;1610:96;;;:::o;1712:122::-;1785:24;1803:5;1785:24;:::i;:::-;1778:5;1775:35;1765:63;;1824:1;1821;1814:12;1765:63;1712:122;:::o;1840:139::-;1886:5;1924:6;1911:20;1902:29;;1940:33;1967:5;1940:33;:::i;:::-;1840:139;;;;:::o;1985:329::-;2044:6;2093:2;2081:9;2072:7;2068:23;2064:32;2061:119;;;2099:79;;:::i;:::-;2061:119;2219:1;2244:53;2289:7;2280:6;2269:9;2265:22;2244:53;:::i;:::-;2234:63;;2190:117;1985:329;;;;:::o;2320:472::-;2387:6;2395;2444:2;2432:9;2423:7;2419:23;2415:32;2412:119;;;2450:79;;:::i;:::-;2412:119;2570:1;2595:53;2640:7;2631:6;2620:9;2616:22;2595:53;:::i;:::-;2585:63;;2541:117;2697:2;2723:52;2767:7;2758:6;2747:9;2743:22;2723:52;:::i;:::-;2713:62;;2668:117;2320:472;;;;;:::o;2798:118::-;2885:24;2903:5;2885:24;:::i;:::-;2880:3;2873:37;2798:118;;:::o;2922:222::-;3015:4;3053:2;3042:9;3038:18;3030:26;;3066:71;3134:1;3123:9;3119:17;3110:6;3066:71;:::i;:::-;2922:222;;;;:::o;3150:180::-;3198:77;3195:1;3188:88;3295:4;3292:1;3285:15;3319:4;3316:1;3309:15;3336:191;3376:3;3395:20;3413:1;3395:20;:::i;:::-;3390:25;;3429:20;3447:1;3429:20;:::i;:::-;3424:25;;3472:1;3469;3465:9;3458:16;;3493:3;3490:1;3487:10;3484:36;;;3500:18;;:::i;:::-;3484:36;3336:191;;;;:::o;3533:122::-;3606:24;3624:5;3606:24;:::i;:::-;3599:5;3596:35;3586:63;;3645:1;3642;3635:12;3586:63;3533:122;:::o;3661:143::-;3718:5;3749:6;3743:13;3734:22;;3765:33;3792:5;3765:33;:::i;:::-;3661:143;;;;:::o;3810:351::-;3880:6;3929:2;3917:9;3908:7;3904:23;3900:32;3897:119;;;3935:79;;:::i;:::-;3897:119;4055:1;4080:64;4136:7;4127:6;4116:9;4112:22;4080:64;:::i;:::-;4070:74;;4026:128;3810:351;;;;:::o;4167:194::-;4207:4;4227:20;4245:1;4227:20;:::i;:::-;4222:25;;4261:20;4279:1;4261:20;:::i;:::-;4256:25;;4305:1;4302;4298:9;4290:17;;4329:1;4323:4;4320:11;4317:37;;;4334:18;;:::i;:::-;4317:37;4167:194;;;;:::o;4367:410::-;4407:7;4430:20;4448:1;4430:20;:::i;:::-;4425:25;;4464:20;4482:1;4464:20;:::i;:::-;4459:25;;4519:1;4516;4512:9;4541:30;4559:11;4541:30;:::i;:::-;4530:41;;4720:1;4711:7;4707:15;4704:1;4701:22;4681:1;4674:9;4654:83;4631:139;;4750:18;;:::i;:::-;4631:139;4415:362;4367:410;;;;:::o;4783:180::-;4831:77;4828:1;4821:88;4928:4;4925:1;4918:15;4952:4;4949:1;4942:15;4969:185;5009:1;5026:20;5044:1;5026:20;:::i;:::-;5021:25;;5060:20;5078:1;5060:20;:::i;:::-;5055:25;;5099:1;5089:35;;5104:18;;:::i;:::-;5089:35;5146:1;5143;5139:9;5134:14;;4969:185;;;;:::o;5160:332::-;5281:4;5319:2;5308:9;5304:18;5296:26;;5332:71;5400:1;5389:9;5385:17;5376:6;5332:71;:::i;:::-;5413:72;5481:2;5470:9;5466:18;5457:6;5413:72;:::i;:::-;5160:332;;;;;:::o;5498:147::-;5599:11;5636:3;5621:18;;5498:147;;;;:::o;5651:114::-;;:::o;5771:398::-;5930:3;5951:83;6032:1;6027:3;5951:83;:::i;:::-;5944:90;;6043:93;6132:3;6043:93;:::i;:::-;6161:1;6156:3;6152:11;6145:18;;5771:398;;;:::o;6175:379::-;6359:3;6381:147;6524:3;6381:147;:::i;:::-;6374:154;;6545:3;6538:10;;6175:379;;;:::o;6560:90::-;6594:7;6637:5;6630:13;6623:21;6612:32;;6560:90;;;:::o;6656:116::-;6726:21;6741:5;6726:21;:::i;:::-;6719:5;6716:32;6706:60;;6762:1;6759;6752:12;6706:60;6656:116;:::o;6778:137::-;6832:5;6863:6;6857:13;6848:22;;6879:30;6903:5;6879:30;:::i;:::-;6778:137;;;;:::o;6921:345::-;6988:6;7037:2;7025:9;7016:7;7012:23;7008:32;7005:119;;;7043:79;;:::i;:::-;7005:119;7163:1;7188:61;7241:7;7232:6;7221:9;7217:22;7188:61;:::i;:::-;7178:71;;7134:125;6921:345;;;;:::o;7272:98::-;7323:6;7357:5;7351:12;7341:22;;7272:98;;;:::o;7376:246::-;7457:1;7467:113;7481:6;7478:1;7475:13;7467:113;;;7566:1;7561:3;7557:11;7551:18;7547:1;7542:3;7538:11;7531:39;7503:2;7500:1;7496:10;7491:15;;7467:113;;;7614:1;7605:6;7600:3;7596:16;7589:27;7438:184;7376:246;;;:::o;7628:386::-;7732:3;7760:38;7792:5;7760:38;:::i;:::-;7814:88;7895:6;7890:3;7814:88;:::i;:::-;7807:95;;7911:65;7969:6;7964:3;7957:4;7950:5;7946:16;7911:65;:::i;:::-;8001:6;7996:3;7992:16;7985:23;;7736:278;7628:386;;;;:::o;8020:271::-;8150:3;8172:93;8261:3;8252:6;8172:93;:::i;:::-;8165:100;;8282:3;8275:10;;8020:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "898000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"duration()": "infinite",
								"end()": "infinite",
								"owner()": "2611",
								"releasable()": "infinite",
								"releasable(address)": "infinite",
								"release()": "infinite",
								"release(address)": "infinite",
								"released()": "2460",
								"released(address)": "2886",
								"renounceOwnership()": "infinite",
								"start()": "infinite",
								"transferOwnership(address)": "infinite",
								"vestedAmount(address,uint64)": "infinite",
								"vestedAmount(uint64)": "infinite"
							},
							"internal": {
								"_vestingSchedule(uint256,uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1638,
									"end": 5670,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2143,
									"end": 2329,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2239,
									"end": 2250,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2271,
									"end": 2285,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2262,
									"end": 2285,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2262,
									"end": 2285,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2262,
									"end": 2285,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2262,
									"end": 2285,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2262,
									"end": 2285,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2262,
									"end": 2285,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2262,
									"end": 2285,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2262,
									"end": 2285,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2262,
									"end": 2285,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2262,
									"end": 2285,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2307,
									"end": 2322,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2295,
									"end": 2322,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2295,
									"end": 2322,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2295,
									"end": 2322,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 2295,
									"end": 2322,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2295,
									"end": 2322,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2295,
									"end": 2322,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2295,
									"end": 2322,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2295,
									"end": 2322,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2295,
									"end": 2322,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2295,
									"end": 2322,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 946,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 845,
									"end": 946,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 881,
									"end": 888,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 914,
									"end": 919,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 910,
									"end": 940,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 899,
									"end": 940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 899,
									"end": 940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 946,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 946,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 845,
									"end": 946,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 952,
									"end": 1072,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 952,
									"end": 1072,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1024,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1041,
									"end": 1046,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1024,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1024,
									"end": 1047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1024,
									"end": 1047,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1024,
									"end": 1047,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1022,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1014,
									"end": 1048,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1066,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1062,
									"end": 1063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1059,
									"end": 1060,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1052,
									"end": 1064,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1004,
									"end": 1066,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 952,
									"end": 1072,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 952,
									"end": 1072,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1134,
									"end": 1139,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1165,
									"end": 1171,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1159,
									"end": 1172,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1150,
									"end": 1172,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1150,
									"end": 1172,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1207,
									"end": 1212,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1181,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1181,
									"end": 1213,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1181,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1219,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1219,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1225,
									"end": 1884,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1225,
									"end": 1884,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1317,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 1325,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1327,
									"end": 1333,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1376,
									"end": 1378,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1364,
									"end": 1373,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1355,
									"end": 1362,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 1374,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1347,
									"end": 1379,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1463,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1463,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1344,
									"end": 1463,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1382,
									"end": 1461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1463,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1344,
									"end": 1463,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1502,
									"end": 1503,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1583,
									"end": 1590,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1580,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1572,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1559,
									"end": 1581,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1527,
									"end": 1591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1473,
									"end": 1601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1640,
									"end": 1642,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1666,
									"end": 1729,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1721,
									"end": 1728,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1712,
									"end": 1718,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1710,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1697,
									"end": 1719,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1729,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1666,
									"end": 1729,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1729,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1666,
									"end": 1729,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1656,
									"end": 1729,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1656,
									"end": 1729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1611,
									"end": 1739,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1780,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1804,
									"end": 1867,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1859,
									"end": 1866,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1850,
									"end": 1856,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1848,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 1857,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1804,
									"end": 1867,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1804,
									"end": 1867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1804,
									"end": 1867,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1804,
									"end": 1867,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1794,
									"end": 1867,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1794,
									"end": 1867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1749,
									"end": 1877,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1225,
									"end": 1884,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1225,
									"end": 1884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1225,
									"end": 1884,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1225,
									"end": 1884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1225,
									"end": 1884,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1225,
									"end": 1884,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 2008,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1890,
									"end": 2008,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1977,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1995,
									"end": 2000,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1977,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1977,
									"end": 2001,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1977,
									"end": 2001,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1977,
									"end": 2001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1972,
									"end": 1975,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1965,
									"end": 2002,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 2008,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 2008,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 2008,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2014,
									"end": 2236,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2014,
									"end": 2236,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2107,
									"end": 2111,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2145,
									"end": 2147,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2134,
									"end": 2143,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2130,
									"end": 2148,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2148,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2122,
									"end": 2148,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2226,
									"end": 2227,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2215,
									"end": 2224,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2228,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2202,
									"end": 2208,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2158,
									"end": 2229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2229,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2158,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2014,
									"end": 2236,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2014,
									"end": 2236,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2014,
									"end": 2236,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2014,
									"end": 2236,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2014,
									"end": 2236,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1638,
									"end": 5670,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201f83ca4cb6fa3f5f83ddb68c9cfce929e8afc115e0464550968802e8cf16e68564736f6c63430008120033",
									".code": [
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "96132521"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "BE9A6555"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "BE9A6555"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "EFBE1C1C"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "FBCCEDAE"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "96132521"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "9852595C"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "A3F8EACE"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "810EC23B"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "86D1A69F"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "A17B06B"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "FB5A6B4"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "19165587"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 5670,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4613,
											"end": 4778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4613,
											"end": 4778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4613,
											"end": 4778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2662,
											"end": 2753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2662,
											"end": 2753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4227,
											"end": 4473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4227,
											"end": 4473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4919,
											"end": 5121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4919,
											"end": 5121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4919,
											"end": 5121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3905,
											"end": 4103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2979,
											"end": 3070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2979,
											"end": 3070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3137,
											"end": 3253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3137,
											"end": 3253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3137,
											"end": 3253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3608,
											"end": 3767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3608,
											"end": 3767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3608,
											"end": 3767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2510,
											"end": 2595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2510,
											"end": 2595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2817,
											"end": 2914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2817,
											"end": 2914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3328,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3328,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4682,
											"end": 4689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4749,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4749,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4749,
											"end": 4759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4749,
											"end": 4759,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4749,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4746,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4725,
											"end": 4759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4725,
											"end": 4759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4759,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4725,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4761,
											"end": 4770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4708,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4708,
											"end": 4771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4708,
											"end": 4771,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4708,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2711,
											"end": 2718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2746,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2730,
											"end": 2746,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2730,
											"end": 2746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4284,
											"end": 4298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4301,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4312,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4301,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4301,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4284,
											"end": 4318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4284,
											"end": 4318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4353,
											"end": 4359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4348,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4328,
											"end": 4359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "PUSH",
											"source": 0,
											"value": "C0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B"
										},
										{
											"begin": 4395,
											"end": 4401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4374,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4402,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 4412,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4442,
											"end": 4447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4450,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4450,
											"end": 4457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4459,
											"end": 4465,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4412,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4412,
											"end": 4466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4412,
											"end": 4466,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4412,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4274,
											"end": 4473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5003,
											"end": 5010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5029,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5087,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5096,
											"end": 5101,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5087,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5087,
											"end": 5102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5087,
											"end": 5102,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5087,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5069,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5046,
											"end": 5069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5069,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5078,
											"end": 5082,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5046,
											"end": 5084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5046,
											"end": 5084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5046,
											"end": 5084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5046,
											"end": 5102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5029,
											"end": 5114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5114,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5029,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5022,
											"end": 5114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5022,
											"end": 5114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 5121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3905,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3966,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3966,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3978,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3966,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4001,
											"end": 4007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 3997,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3988,
											"end": 3997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3988,
											"end": 4007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "PUSH",
											"source": 0,
											"value": "DA9D4E5F101B8B9B1C5B76D0C5A9F7923571ACFC02376AA076B75A8C080C956B"
										},
										{
											"begin": 4036,
											"end": 4042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4022,
											"end": 4043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4043,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4079,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4079,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4079,
											"end": 4086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4086,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4079,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4053,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4096,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4053,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3939,
											"end": 4103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3905,
											"end": 4103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3239,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3745,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3760,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3745,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3711,
											"end": 3716,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3740,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3698,
											"end": 3742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3742,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3698,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3698,
											"end": 3760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3698,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3760,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3698,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3691,
											"end": 3760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3691,
											"end": 3760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2588,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2575,
											"end": 2588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2575,
											"end": 2588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2861,
											"end": 2868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2897,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2897,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2897,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2897,
											"end": 2907,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2897,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2887,
											"end": 2894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2894,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2887,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2887,
											"end": 2907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2887,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2907,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2887,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3445,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3445,
											"end": 3455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3445,
											"end": 3455,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3445,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3425,
											"end": 3440,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3405,
											"end": 3442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3442,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3405,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3405,
											"end": 3455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3405,
											"end": 3455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3455,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3405,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5668,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5316,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5416,
											"end": 5423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5451,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5451,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5451,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5451,
											"end": 5458,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5451,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5439,
											"end": 5458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5458,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5662,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5435,
											"end": 5662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5474,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5474,
											"end": 5482,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5662,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5435,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5516,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5516,
											"end": 5521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5521,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5516,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5499,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5499,
											"end": 5662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5544,
											"end": 5559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5537,
											"end": 5559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5537,
											"end": 5559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5537,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5537,
											"end": 5559,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5499,
											"end": 5662,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5499,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5641,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5641,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5641,
											"end": 5651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5641,
											"end": 5651,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5641,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5629,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5629,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5629,
											"end": 5636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5629,
											"end": 5636,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5629,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5617,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5617,
											"end": 5636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5617,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5617,
											"end": 5636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5617,
											"end": 5636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5617,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5617,
											"end": 5636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5617,
											"end": 5636,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5617,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5613,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5598,
											"end": 5637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5598,
											"end": 5637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5637,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5598,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5597,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5597,
											"end": 5651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5597,
											"end": 5651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5597,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5597,
											"end": 5651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5597,
											"end": 5651,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5597,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5668,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5316,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5668,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1862,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1637,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1646,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1721,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1612,
											"end": 1721,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1708,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 5,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1669,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1721,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1612,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1732,
											"end": 1744,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1764,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1750,
											"end": 1764,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 1778,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1750,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 1783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 1783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 1783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1798,
											"end": 1805,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1793,
											"end": 1856,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "PUSH",
											"source": 5,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1856,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1793,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1602,
											"end": 1862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1531,
											"end": 1862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1531,
											"end": 1862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1531,
											"end": 1862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 435,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 334,
											"end": 435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 399,
											"end": 429,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 388,
											"end": 429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 388,
											"end": 429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 435,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 441,
											"end": 561,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 441,
											"end": 561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 513,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 530,
											"end": 535,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 513,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 513,
											"end": 536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 513,
											"end": 536,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 513,
											"end": 536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 506,
											"end": 511,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 503,
											"end": 537,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 493,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 493,
											"end": 555,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 551,
											"end": 552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 541,
											"end": 553,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 493,
											"end": 555,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 493,
											"end": 555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 441,
											"end": 561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 441,
											"end": 561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 704,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 567,
											"end": 704,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 612,
											"end": 617,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 637,
											"end": 657,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 628,
											"end": 657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 628,
											"end": 657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 666,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 666,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 666,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 666,
											"end": 698,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 666,
											"end": 698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 567,
											"end": 704,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 567,
											"end": 704,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 567,
											"end": 704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 710,
											"end": 1037,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 710,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 768,
											"end": 774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 814,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 796,
											"end": 803,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 792,
											"end": 815,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 788,
											"end": 820,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 785,
											"end": 904,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 785,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 785,
											"end": 904,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 823,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 823,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 823,
											"end": 902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 823,
											"end": 902,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 823,
											"end": 902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 785,
											"end": 904,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 785,
											"end": 904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 943,
											"end": 944,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 1012,
											"end": 1019,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1001,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1010,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 968,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 968,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 968,
											"end": 1020,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 968,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 958,
											"end": 1020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 958,
											"end": 1020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 914,
											"end": 1030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 710,
											"end": 1037,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 710,
											"end": 1037,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 710,
											"end": 1037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 710,
											"end": 1037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 710,
											"end": 1037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1120,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1043,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1114,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1244,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1126,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1231,
											"end": 1236,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1213,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1237,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1213,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1208,
											"end": 1211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1238,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1472,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1250,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1347,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1383,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 1379,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1384,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1462,
											"end": 1463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1460,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1464,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1394,
											"end": 1465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1465,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1394,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1472,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1604,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1478,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1515,
											"end": 1522,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1597,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1548,
											"end": 1553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1598,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1706,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1610,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1654,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1694,
											"end": 1699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1676,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1700,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1676,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1706,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1834,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1712,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1803,
											"end": 1808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1785,
											"end": 1809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1809,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1785,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1778,
											"end": 1783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1775,
											"end": 1810,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1765,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 1765,
											"end": 1828,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1825,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1826,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1765,
											"end": 1828,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 1765,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1840,
											"end": 1979,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1840,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1911,
											"end": 1931,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 1931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 1931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1967,
											"end": 1972,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1940,
											"end": 1973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1973,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1940,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1840,
											"end": 1979,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1840,
											"end": 1979,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1840,
											"end": 1979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1840,
											"end": 1979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1840,
											"end": 1979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2314,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1985,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2095,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2072,
											"end": 2079,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2068,
											"end": 2091,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2096,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2061,
											"end": 2180,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2061,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2061,
											"end": 2180,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2099,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2099,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2099,
											"end": 2178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2099,
											"end": 2178,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2099,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2061,
											"end": 2180,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2061,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2244,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2289,
											"end": 2296,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2280,
											"end": 2286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2278,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2244,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2297,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2244,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2297,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2190,
											"end": 2307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2314,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2314,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2792,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2320,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2393,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2401,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2444,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2441,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2430,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2442,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2415,
											"end": 2447,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2531,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2412,
											"end": 2531,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 2450,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2450,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2529,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 2450,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2531,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2412,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2640,
											"end": 2647,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2631,
											"end": 2637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2620,
											"end": 2629,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2595,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2767,
											"end": 2774,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2765,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2723,
											"end": 2775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2775,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2723,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 2775,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 2775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2792,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2792,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2792,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2916,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2798,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2903,
											"end": 2908,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2885,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2909,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2885,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2883,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2873,
											"end": 2910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 3144,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2922,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3055,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3042,
											"end": 3051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3038,
											"end": 3056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3056,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3134,
											"end": 3135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3132,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3116,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3066,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3066,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 3144,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 3144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 3144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 3144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 3144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3330,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3150,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3275,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3276,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3299,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3292,
											"end": 3293,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3285,
											"end": 3300,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3319,
											"end": 3323,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3316,
											"end": 3317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3324,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3336,
											"end": 3527,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 3336,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 3413,
											"end": 3414,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3395,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3415,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 3395,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3429,
											"end": 3449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3424,
											"end": 3449,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3424,
											"end": 3449,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3469,
											"end": 3470,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3493,
											"end": 3496,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3491,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3497,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3484,
											"end": 3520,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3484,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 3484,
											"end": 3520,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3500,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3500,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3500,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3500,
											"end": 3518,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3500,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3484,
											"end": 3520,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 3484,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3336,
											"end": 3527,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3336,
											"end": 3527,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3336,
											"end": 3527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3336,
											"end": 3527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3336,
											"end": 3527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3655,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3533,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 3624,
											"end": 3629,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3606,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3630,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 3606,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3604,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3631,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3586,
											"end": 3649,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3645,
											"end": 3646,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3635,
											"end": 3647,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3649,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3586,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3804,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3661,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3723,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3756,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 3792,
											"end": 3797,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3765,
											"end": 3798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3798,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 3765,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3804,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3804,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4161,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 3810,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3904,
											"end": 3927,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 3932,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 4016,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3897,
											"end": 4016,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3935,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3935,
											"end": 4014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 4014,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3935,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 4016,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3897,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4080,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4080,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4080,
											"end": 4144,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4080,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4070,
											"end": 4144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4070,
											"end": 4144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4161,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4161,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4167,
											"end": 4361,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 4167,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4211,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 4245,
											"end": 4246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4227,
											"end": 4247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4247,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 4227,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4222,
											"end": 4247,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4222,
											"end": 4247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 4279,
											"end": 4280,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4261,
											"end": 4281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4256,
											"end": 4281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4298,
											"end": 4307,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4330,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4327,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4320,
											"end": 4331,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4317,
											"end": 4354,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4317,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 4317,
											"end": 4354,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4334,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4317,
											"end": 4354,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 4317,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4167,
											"end": 4361,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4167,
											"end": 4361,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4167,
											"end": 4361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4167,
											"end": 4361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4167,
											"end": 4361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4777,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 4367,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 4448,
											"end": 4449,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4430,
											"end": 4450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4450,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 4482,
											"end": 4483,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4464,
											"end": 4484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4484,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 4464,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4459,
											"end": 4484,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4459,
											"end": 4484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4519,
											"end": 4520,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4517,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4521,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 4559,
											"end": 4570,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4541,
											"end": 4571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4571,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 4541,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 4571,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 4571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4720,
											"end": 4721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4711,
											"end": 4718,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4722,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4705,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4701,
											"end": 4723,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4682,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4674,
											"end": 4683,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4737,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 4631,
											"end": 4770,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4750,
											"end": 4768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4770,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 4631,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4415,
											"end": 4777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4777,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4777,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4783,
											"end": 4963,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4783,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4831,
											"end": 4908,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4828,
											"end": 4829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4909,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4932,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4925,
											"end": 4926,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4918,
											"end": 4933,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4952,
											"end": 4956,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4942,
											"end": 4957,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5154,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4969,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5009,
											"end": 5010,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 5044,
											"end": 5045,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5026,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5046,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 5026,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5046,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 5078,
											"end": 5079,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5060,
											"end": 5080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5080,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 5060,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5055,
											"end": 5080,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5055,
											"end": 5080,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5089,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 5089,
											"end": 5124,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5104,
											"end": 5122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5089,
											"end": 5124,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 5089,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5147,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5143,
											"end": 5144,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5148,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5134,
											"end": 5148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5134,
											"end": 5148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5154,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5154,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5492,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 5160,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5281,
											"end": 5285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5319,
											"end": 5321,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5308,
											"end": 5317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5322,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5296,
											"end": 5322,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5296,
											"end": 5322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 5400,
											"end": 5401,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5385,
											"end": 5402,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5332,
											"end": 5403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5403,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 5332,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 5481,
											"end": 5483,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5470,
											"end": 5479,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5457,
											"end": 5463,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 5413,
											"end": 5485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5485,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 5413,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5492,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5492,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5645,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5498,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5639,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5651,
											"end": 5765,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 5651,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5651,
											"end": 5765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5651,
											"end": 5765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 6169,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5771,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5933,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 6032,
											"end": 6033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6030,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5951,
											"end": 6034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 6034,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 5951,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 6034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 6034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 6132,
											"end": 6135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6043,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6136,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 6043,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6162,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6152,
											"end": 6163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 6169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 6169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 6169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 6169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6175,
											"end": 6554,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 6175,
											"end": 6554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6381,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 6524,
											"end": 6527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 6381,
											"end": 6528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6528,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 6381,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6374,
											"end": 6528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6374,
											"end": 6528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6545,
											"end": 6548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6538,
											"end": 6548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6538,
											"end": 6548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6175,
											"end": 6554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6175,
											"end": 6554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6175,
											"end": 6554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6175,
											"end": 6554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6560,
											"end": 6650,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6560,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6594,
											"end": 6601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6637,
											"end": 6642,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6630,
											"end": 6643,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6623,
											"end": 6644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6560,
											"end": 6650,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6560,
											"end": 6650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6560,
											"end": 6650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6560,
											"end": 6650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6656,
											"end": 6772,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6656,
											"end": 6772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 6741,
											"end": 6746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6726,
											"end": 6747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6747,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 6726,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6719,
											"end": 6724,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6716,
											"end": 6748,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 6706,
											"end": 6766,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 6763,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6759,
											"end": 6760,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6764,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6766,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 6706,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6656,
											"end": 6772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6656,
											"end": 6772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6915,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 6778,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 6837,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6857,
											"end": 6870,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6848,
											"end": 6870,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6848,
											"end": 6870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6879,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 6903,
											"end": 6908,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6879,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6879,
											"end": 6909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6879,
											"end": 6909,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 6879,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6915,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6915,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6921,
											"end": 7266,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6921,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6988,
											"end": 6994,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7037,
											"end": 7039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7023,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7012,
											"end": 7035,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7008,
											"end": 7040,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7124,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 7005,
											"end": 7124,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 7043,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 7043,
											"end": 7122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7122,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 7043,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7124,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 7005,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7164,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7188,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7241,
											"end": 7248,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7232,
											"end": 7238,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7221,
											"end": 7230,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7217,
											"end": 7239,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 7188,
											"end": 7249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7249,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7188,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7178,
											"end": 7249,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7178,
											"end": 7249,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6921,
											"end": 7266,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6921,
											"end": 7266,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6921,
											"end": 7266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6921,
											"end": 7266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6921,
											"end": 7266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7272,
											"end": 7370,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7272,
											"end": 7370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7323,
											"end": 7329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7357,
											"end": 7362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7351,
											"end": 7363,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7272,
											"end": 7370,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7272,
											"end": 7370,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7272,
											"end": 7370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7272,
											"end": 7370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7376,
											"end": 7622,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 7376,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7457,
											"end": 7458,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7467,
											"end": 7580,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 7467,
											"end": 7580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7481,
											"end": 7487,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7479,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7475,
											"end": 7488,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7580,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 7467,
											"end": 7580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7567,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7561,
											"end": 7564,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7557,
											"end": 7568,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7551,
											"end": 7569,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7545,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7538,
											"end": 7549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7531,
											"end": 7570,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7503,
											"end": 7505,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7500,
											"end": 7501,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7496,
											"end": 7506,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7491,
											"end": 7506,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7491,
											"end": 7506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 7467,
											"end": 7580,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7580,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 7467,
											"end": 7580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7614,
											"end": 7615,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7603,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7596,
											"end": 7612,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7438,
											"end": 7622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7376,
											"end": 7622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7376,
											"end": 7622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7376,
											"end": 7622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7376,
											"end": 7622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 8014,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 7628,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7735,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7760,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 7792,
											"end": 7797,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7760,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7760,
											"end": 7798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7760,
											"end": 7798,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 7760,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7895,
											"end": 7901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7890,
											"end": 7893,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 7814,
											"end": 7902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7902,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7814,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7902,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7911,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 7969,
											"end": 7975,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7964,
											"end": 7967,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 7961,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7950,
											"end": 7955,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7911,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 7911,
											"end": 7976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7911,
											"end": 7976,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 7911,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8001,
											"end": 8007,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 7999,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7992,
											"end": 8008,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7736,
											"end": 8014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 8014,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 8014,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 8014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 8014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 8014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8291,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 8020,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8150,
											"end": 8153,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8172,
											"end": 8265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 8261,
											"end": 8264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8252,
											"end": 8258,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8172,
											"end": 8265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 8172,
											"end": 8265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8172,
											"end": 8265,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 8172,
											"end": 8265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8165,
											"end": 8265,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8165,
											"end": 8265,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8282,
											"end": 8285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8285,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8285,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8291,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8291,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol",
								"contracts/OpenZeppelin/access/Ownable.sol",
								"contracts/OpenZeppelin/token/ERC20/IERC20.sol",
								"contracts/OpenZeppelin/token/ERC20/extensions/IERC20Permit.sol",
								"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol",
								"contracts/OpenZeppelin/utils/Address.sol",
								"contracts/OpenZeppelin/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"duration()": "0fb5a6b4",
							"end()": "efbe1c1c",
							"owner()": "8da5cb5b",
							"releasable()": "fbccedae",
							"releasable(address)": "a3f8eace",
							"release()": "86d1a69f",
							"release(address)": "19165587",
							"released()": "96132521",
							"released(address)": "9852595c",
							"renounceOwnership()": "715018a6",
							"start()": "be9a6555",
							"transferOwnership(address)": "f2fde38b",
							"vestedAmount(address,uint64)": "810ec23b",
							"vestedAmount(uint64)": "0a17b06b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"durationSeconds\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A vesting wallet is an ownable contract that can receive native currency and ERC20 tokens, and release these assets to the wallet owner, also referred to as \\\"beneficiary\\\", according to a vesting schedule. Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning. Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly) be immediately releasable. By setting the duration to 0, one can configure this contract to behave like an asset timelock that hold tokens for a beneficiary until a specified time. NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens. Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the near future. NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the sender as the initial owner, the beneficiary as the pending owner, the start timestamp and the vesting duration of the vesting wallet.\"},\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"end()\":{\"details\":\"Getter for the end timestamp.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"releasable()\":{\"details\":\"Getter for the amount of releasable eth.\"},\"releasable(address)\":{\"details\":\"Getter for the amount of releasable `token` tokens. `token` should be the address of an IERC20 contract.\"},\"release()\":{\"details\":\"Release the native token (ether) that have already vested. Emits a {EtherReleased} event.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {ERC20Released} event.\"},\"released()\":{\"details\":\"Amount of eth already released\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"},\"vestedAmount(uint64)\":{\"details\":\"Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":\"VestingWallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol\":{\"keccak256\":\"0x520474ab26773cfaaffd9ac6b1bfe0a7b17bc4bc3c43af199180c4c56730adde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c44aaf7be27982222b5aa7614b01e3e5c72ec92bb8595a430d51893c23e61b5\",\"dweb:/ipfs/QmcipwPYXhWRDC7x8WYgDELaLz2VpYK8SANvbKHTKTKpwh\"]},\"contracts/OpenZeppelin/access/Ownable.sol\":{\"keccak256\":\"0x5cbeef83b786cc3dfbe563b837a4ac9c7cdf4c4f657c9b5313b769f89d5d941b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbdc88699747ecc5b162d5482b15d465d551312a7bb754ea1be7cf3527421b60\",\"dweb:/ipfs/QmddoZshcMhe6TjhcXvZ7bpqBVVX12Qwr4D8ziBHHwWD7D\"]},\"contracts/OpenZeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xcfc85678b0e3d57286a16be85e750749c626afee8a4fa4c91710b08c1a21ae10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6842e2bb8a511039fb46a2b15568b140b2d53bf229a529f576c6ab3ed31ff23\",\"dweb:/ipfs/Qmd8pmFAxjArtoaf9yAFSjrN3u3E4UJoBgv2cCkMnZURro\"]},\"contracts/OpenZeppelin/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x558d6d08dc0aadbf9d9524e9db235472c4f543f9e272c0c316362556085f8b46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6227dec5c16a8419c94078e9398be3b938005db60cdf2c5144e74eaf696d11a8\",\"dweb:/ipfs/QmQr6SbCd9tj5sw7WbRYdBWctH5N6vASc1G5ksSgMGy8ap\"]},\"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xb762baa6f32df5fcc7c36c66434bf410cef9eeea5efc5e08d932093aee077ee9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84854c7fa4e6cb5f296d479f63f5c51ee44e6945ee4562a4a7ede6d0f98fbd6c\",\"dweb:/ipfs/Qmdo192MQmTKZ4nVm3FaC4t864vAciqGG53cvZme9d9HSy\"]},\"contracts/OpenZeppelin/utils/Address.sol\":{\"keccak256\":\"0x3b6f8360ef94dd8c45bd1ae5ac955d256383d914f37ea977ab44cf22cdd5a6a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a862eb3eccc1fd838b59935275ee2d5007f834fdaf66737c2c00e25156c94144\",\"dweb:/ipfs/Qmdk6j5vY5xCPys9kg1imJcXRaBEUXGJwEU5WdNTBMEMiK\"]},\"contracts/OpenZeppelin/utils/Context.sol\":{\"keccak256\":\"0x84c596be63575e8a8b3ae80edcdcbb30072f596fadb7cf2c1f23dab511dcfc30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f66cd378c32e351b33d2a46d6d31ddb12e7a292dca02dea4dfc5ea6b8e561608\",\"dweb:/ipfs/QmXDtqGSK54yUy9Wtwf5By7Ugj4ZqEfYDgoKyYD2DtXSZk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "contracts/OpenZeppelin/VestingWallet/VestingWallet.sol:VestingWallet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 28,
								"contract": "contracts/OpenZeppelin/VestingWallet/VestingWallet.sol:VestingWallet",
								"label": "_released",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 32,
								"contract": "contracts/OpenZeppelin/VestingWallet/VestingWallet.sol:VestingWallet",
								"label": "_erc20Released",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OpenZeppelin/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OpenZeppelin/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OpenZeppelin/access/Ownable.sol\":{\"keccak256\":\"0x5cbeef83b786cc3dfbe563b837a4ac9c7cdf4c4f657c9b5313b769f89d5d941b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbdc88699747ecc5b162d5482b15d465d551312a7bb754ea1be7cf3527421b60\",\"dweb:/ipfs/QmddoZshcMhe6TjhcXvZ7bpqBVVX12Qwr4D8ziBHHwWD7D\"]},\"contracts/OpenZeppelin/utils/Context.sol\":{\"keccak256\":\"0x84c596be63575e8a8b3ae80edcdcbb30072f596fadb7cf2c1f23dab511dcfc30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f66cd378c32e351b33d2a46d6d31ddb12e7a292dca02dea4dfc5ea6b8e561608\",\"dweb:/ipfs/QmXDtqGSK54yUy9Wtwf5By7Ugj4ZqEfYDgoKyYD2DtXSZk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "contracts/OpenZeppelin/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OpenZeppelin/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OpenZeppelin/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OpenZeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xcfc85678b0e3d57286a16be85e750749c626afee8a4fa4c91710b08c1a21ae10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6842e2bb8a511039fb46a2b15568b140b2d53bf229a529f576c6ab3ed31ff23\",\"dweb:/ipfs/Qmd8pmFAxjArtoaf9yAFSjrN3u3E4UJoBgv2cCkMnZURro\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OpenZeppelin/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OpenZeppelin/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OpenZeppelin/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x558d6d08dc0aadbf9d9524e9db235472c4f543f9e272c0c316362556085f8b46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6227dec5c16a8419c94078e9398be3b938005db60cdf2c5144e74eaf696d11a8\",\"dweb:/ipfs/QmQr6SbCd9tj5sw7WbRYdBWctH5N6vASc1G5ksSgMGy8ap\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122071c90dcbf4ddc3f2bcfaf4a6d3ae4ce71ba8b8bc8966ae51de6622e7c5ceadad64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071c90dcbf4ddc3f2bcfaf4a6d3ae4ce71ba8b8bc8966ae51de6622e7c5ceadad64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xC90DCBF4DDC3F2BCFAF4A6D3AE4CE71BA8B8 0xBC DUP10 PUSH7 0xAE51DE6622E7C5 0xCE 0xAD 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "751:5018:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071c90dcbf4ddc3f2bcfaf4a6d3ae4ce71ba8b8bc8966ae51de6622e7c5ceadad64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xC90DCBF4DDC3F2BCFAF4A6D3AE4CE71BA8B8 0xBC DUP10 PUSH7 0xAE51DE6622E7C5 0xCE 0xAD 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "751:5018:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122071c90dcbf4ddc3f2bcfaf4a6d3ae4ce71ba8b8bc8966ae51de6622e7c5ceadad64736f6c63430008120033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol",
								"contracts/OpenZeppelin/access/Ownable.sol",
								"contracts/OpenZeppelin/token/ERC20/IERC20.sol",
								"contracts/OpenZeppelin/token/ERC20/extensions/IERC20Permit.sol",
								"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol",
								"contracts/OpenZeppelin/utils/Address.sol",
								"contracts/OpenZeppelin/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OpenZeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xcfc85678b0e3d57286a16be85e750749c626afee8a4fa4c91710b08c1a21ae10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6842e2bb8a511039fb46a2b15568b140b2d53bf229a529f576c6ab3ed31ff23\",\"dweb:/ipfs/Qmd8pmFAxjArtoaf9yAFSjrN3u3E4UJoBgv2cCkMnZURro\"]},\"contracts/OpenZeppelin/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x558d6d08dc0aadbf9d9524e9db235472c4f543f9e272c0c316362556085f8b46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6227dec5c16a8419c94078e9398be3b938005db60cdf2c5144e74eaf696d11a8\",\"dweb:/ipfs/QmQr6SbCd9tj5sw7WbRYdBWctH5N6vASc1G5ksSgMGy8ap\"]},\"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xb762baa6f32df5fcc7c36c66434bf410cef9eeea5efc5e08d932093aee077ee9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84854c7fa4e6cb5f296d479f63f5c51ee44e6945ee4562a4a7ede6d0f98fbd6c\",\"dweb:/ipfs/Qmdo192MQmTKZ4nVm3FaC4t864vAciqGG53cvZme9d9HSy\"]},\"contracts/OpenZeppelin/utils/Address.sol\":{\"keccak256\":\"0x3b6f8360ef94dd8c45bd1ae5ac955d256383d914f37ea977ab44cf22cdd5a6a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a862eb3eccc1fd838b59935275ee2d5007f834fdaf66737c2c00e25156c94144\",\"dweb:/ipfs/Qmdk6j5vY5xCPys9kg1imJcXRaBEUXGJwEU5WdNTBMEMiK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OpenZeppelin/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OpenZeppelin/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OpenZeppelin/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c380826406d7dcb07f2b2e9da2aeb95d69416b4602d4d7d5554253a11b53090664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c380826406d7dcb07f2b2e9da2aeb95d69416b4602d4d7d5554253a11b53090664736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 DUP1 DUP3 PUSH5 0x6D7DCB07F 0x2B 0x2E SWAP14 LOG2 0xAE 0xB9 0x5D PUSH10 0x416B4602D4D7D5554253 LOG1 SHL MSTORE8 MULMOD MOD PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c380826406d7dcb07f2b2e9da2aeb95d69416b4602d4d7d5554253a11b53090664736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 DUP1 DUP3 PUSH5 0x6D7DCB07F 0x2B 0x2E SWAP14 LOG2 0xAE 0xB9 0x5D PUSH10 0x416B4602D4D7D5554253 LOG1 SHL MSTORE8 MULMOD MOD PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c380826406d7dcb07f2b2e9da2aeb95d69416b4602d4d7d5554253a11b53090664736f6c63430008120033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol",
								"contracts/OpenZeppelin/access/Ownable.sol",
								"contracts/OpenZeppelin/token/ERC20/IERC20.sol",
								"contracts/OpenZeppelin/token/ERC20/extensions/IERC20Permit.sol",
								"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol",
								"contracts/OpenZeppelin/utils/Address.sol",
								"contracts/OpenZeppelin/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OpenZeppelin/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OpenZeppelin/utils/Address.sol\":{\"keccak256\":\"0x3b6f8360ef94dd8c45bd1ae5ac955d256383d914f37ea977ab44cf22cdd5a6a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a862eb3eccc1fd838b59935275ee2d5007f834fdaf66737c2c00e25156c94144\",\"dweb:/ipfs/Qmdk6j5vY5xCPys9kg1imJcXRaBEUXGJwEU5WdNTBMEMiK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/OpenZeppelin/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OpenZeppelin/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OpenZeppelin/utils/Context.sol\":{\"keccak256\":\"0x84c596be63575e8a8b3ae80edcdcbb30072f596fadb7cf2c1f23dab511dcfc30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f66cd378c32e351b33d2a46d6d31ddb12e7a292dca02dea4dfc5ea6b8e561608\",\"dweb:/ipfs/QmXDtqGSK54yUy9Wtwf5By7Ugj4ZqEfYDgoKyYD2DtXSZk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/OpenZeppelin/VestingWallet/VestingWallet.sol": {
				"ast": {
					"absolutePath": "contracts/OpenZeppelin/VestingWallet/VestingWallet.sol",
					"exportedSymbols": {
						"Address": [
							1115
						],
						"Context": [
							1137
						],
						"IERC20": [
							536
						],
						"Ownable": [
							458
						],
						"SafeERC20": [
							862
						],
						"VestingWallet": [
							310
						]
					},
					"id": 311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "contracts/OpenZeppelin/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 311,
							"sourceUnit": 537,
							"src": "134:49:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 536,
										"src": "142:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol",
							"file": "../token/ERC20/utils/SafeERC20.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 311,
							"sourceUnit": 863,
							"src": "184:61:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 862,
										"src": "192:9:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OpenZeppelin/utils/Address.sol",
							"file": "../utils/Address.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 311,
							"sourceUnit": 1116,
							"src": "246:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1115,
										"src": "254:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OpenZeppelin/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 311,
							"sourceUnit": 1138,
							"src": "292:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1137,
										"src": "300:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OpenZeppelin/access/Ownable.sol",
							"file": "../access/Ownable.sol",
							"id": 11,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 311,
							"sourceUnit": 459,
							"src": "338:46:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 10,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 458,
										"src": "346:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 13,
										"name": "Context",
										"nameLocations": [
											"1664:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1137,
										"src": "1664:7:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "1664:7:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "Ownable",
										"nameLocations": [
											"1673:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 458,
										"src": "1673:7:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "1673:7:0"
								}
							],
							"canonicalName": "VestingWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 12,
								"nodeType": "StructuredDocumentation",
								"src": "386:1251:0",
								"text": " @dev A vesting wallet is an ownable contract that can receive native currency and ERC20 tokens, and release these\n assets to the wallet owner, also referred to as \"beneficiary\", according to a vesting schedule.\n Any assets transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\n Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\n be immediately releasable.\n By setting the duration to 0, one can configure this contract to behave like an asset timelock that hold tokens for\n a beneficiary until a specified time.\n NOTE: Since the wallet is {Ownable}, and ownership can be transferred, it is possible to sell unvested tokens.\n Preventing this in a smart contract is difficult, considering that: 1) a beneficiary address could be a\n counterfactually deployed contract, 2) there is likely to be a migration path for EOAs to become contracts in the\n near future.\n NOTE: When using this contract with any token whose balance is adjusted automatically (i.e. a rebase token), make\n sure to account the supply/balance adjustment in the vesting schedule to ensure the vested amount is as intended."
							},
							"fullyImplemented": true,
							"id": 310,
							"linearizedBaseContracts": [
								310,
								458,
								1137
							],
							"name": "VestingWallet",
							"nameLocation": "1647:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "da9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b",
									"id": 20,
									"name": "EtherReleased",
									"nameLocation": "1693:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1715:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1707:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1706:16:0"
									},
									"src": "1687:36:0"
								},
								{
									"anonymous": false,
									"eventSelector": "c0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b",
									"id": 26,
									"name": "ERC20Released",
									"nameLocation": "1734:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1764:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1748:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1771:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1747:39:0"
									},
									"src": "1728:59:0"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_released",
									"nameLocation": "1809:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "1793:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 27,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1793:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "_erc20Released",
									"nameLocation": "1866:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "1824:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 31,
										"keyName": "token",
										"keyNameLocation": "1840:5:0",
										"keyType": {
											"id": 29,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1832:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1824:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 30,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1849:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 34,
									"mutability": "immutable",
									"name": "_start",
									"nameLocation": "1911:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "1886:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 33,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "1886:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 36,
									"mutability": "immutable",
									"name": "_duration",
									"nameLocation": "1948:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 310,
									"src": "1923:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 35,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "1923:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "2252:77:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 49,
														"name": "_start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2262:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 50,
														"name": "startTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "2271:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "2262:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "2262:23:0"
											},
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "_duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "2295:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 54,
														"name": "durationSeconds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "2307:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "2295:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "2295:27:0"
											}
										]
									},
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1964:174:0",
										"text": " @dev Sets the sender as the initial owner, the beneficiary as the pending owner, the start timestamp and the\n vesting duration of the vesting wallet."
									},
									"id": 58,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 46,
													"name": "beneficiary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 39,
													"src": "2239:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 47,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 45,
												"name": "Ownable",
												"nameLocations": [
													"2231:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "2231:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2231:20:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2163:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2155:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2155:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "startTimestamp",
												"nameLocation": "2183:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2176:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 40,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2176:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "durationSeconds",
												"nameLocation": "2206:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2199:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 42,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2199:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2154:68:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2252:0:0"
									},
									"scope": 310,
									"src": "2143:186:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2442:2:0",
										"statements": []
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2335:67:0",
										"text": " @dev The contract should be able to receive Eth."
									},
									"id": 63,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2414:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2442:0:0"
									},
									"scope": 310,
									"src": "2407:37:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "2565:30:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"name": "_start",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "2582:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 68,
												"id": 70,
												"nodeType": "Return",
												"src": "2575:13:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2450:55:0",
										"text": " @dev Getter for the start timestamp."
									},
									"functionSelector": "be9a6555",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nameLocation": "2519:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2524:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2556:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2555:9:0"
									},
									"scope": 310,
									"src": "2510:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2720:33:0",
										"statements": [
											{
												"expression": {
													"id": 78,
													"name": "_duration",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "2737:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 77,
												"id": 79,
												"nodeType": "Return",
												"src": "2730:16:0"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2601:56:0",
										"text": " @dev Getter for the vesting duration."
									},
									"functionSelector": "0fb5a6b4",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "duration",
									"nameLocation": "2671:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2679:2:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2711:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:9:0"
									},
									"scope": 310,
									"src": "2662:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "2870:44:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 87,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "2887:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2887:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 89,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "2897:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2897:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2887:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 86,
												"id": 92,
												"nodeType": "Return",
												"src": "2880:27:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2759:53:0",
										"text": " @dev Getter for the end timestamp."
									},
									"functionSelector": "efbe1c1c",
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "end",
									"nameLocation": "2826:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2829:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "2861:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2860:9:0"
									},
									"scope": 310,
									"src": "2817:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "3037:33:0",
										"statements": [
											{
												"expression": {
													"id": 100,
													"name": "_released",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "3054:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 99,
												"id": 101,
												"nodeType": "Return",
												"src": "3047:16:0"
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "2920:54:0",
										"text": " @dev Amount of eth already released"
									},
									"functionSelector": "96132521",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "released",
									"nameLocation": "2988:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2996:2:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3028:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3027:9:0"
									},
									"scope": 310,
									"src": "2979:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "3208:45:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 111,
														"name": "_erc20Released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "3225:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 113,
													"indexExpression": {
														"id": 112,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "3240:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3225:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 110,
												"id": 114,
												"nodeType": "Return",
												"src": "3218:28:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3076:56:0",
										"text": " @dev Amount of token already released"
									},
									"functionSelector": "9852595c",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "released",
									"nameLocation": "3146:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3163:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3155:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3154:15:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3199:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3198:9:0"
									},
									"scope": 310,
									"src": "3137:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "3388:74:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 125,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3425:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3431:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3425:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3418:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 123,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "3418:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3418:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 122,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																241,
																269
															],
															"referencedDeclaration": 241,
															"src": "3405:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint64_$returns$_t_uint256_$",
																"typeString": "function (uint64) view returns (uint256)"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3405:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 129,
															"name": "released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																103,
																116
															],
															"referencedDeclaration": 103,
															"src": "3445:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3445:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3405:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 132,
												"nodeType": "Return",
												"src": "3398:57:0"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "3259:64:0",
										"text": " @dev Getter for the amount of releasable eth."
									},
									"functionSelector": "fbccedae",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releasable",
									"nameLocation": "3337:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3347:2:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "3379:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3378:9:0"
									},
									"scope": 310,
									"src": "3328:134:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "3681:86:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 143,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "3711:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 146,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3725:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3731:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3725:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3718:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 144,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "3718:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3718:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 142,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																241,
																269
															],
															"referencedDeclaration": 269,
															"src": "3698:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint64_$returns$_t_uint256_$",
																"typeString": "function (address,uint64) view returns (uint256)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3698:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"id": 151,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "3754:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 150,
															"name": "released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																103,
																116
															],
															"referencedDeclaration": 116,
															"src": "3745:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3745:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3698:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 141,
												"id": 154,
												"nodeType": "Return",
												"src": "3691:69:0"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "3468:135:0",
										"text": " @dev Getter for the amount of releasable `token` tokens. `token` should be the address of an\n IERC20 contract."
									},
									"functionSelector": "a3f8eace",
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releasable",
									"nameLocation": "3617:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3636:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "3628:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:15:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "3672:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3671:9:0"
									},
									"scope": 310,
									"src": "3608:159:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "3939:164:0",
										"statements": [
											{
												"assignments": [
													161
												],
												"declarations": [
													{
														"constant": false,
														"id": 161,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3957:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 184,
														"src": "3949:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 160,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3949:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 164,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 162,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															134,
															156
														],
														"referencedDeclaration": 134,
														"src": "3966:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3966:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3949:29:0"
											},
											{
												"expression": {
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 165,
														"name": "_released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "3988:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 166,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "4001:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3988:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "3988:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 170,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "4036:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 169,
														"name": "EtherReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "4022:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4022:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "EmitStatement",
												"src": "4017:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 178,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "4079:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4079:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4071:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 176,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4071:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4071:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 181,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "4089:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 173,
															"name": "Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "4053:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Address_$1115_$",
																"typeString": "type(library Address)"
															}
														},
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4061:9:0",
														"memberName": "sendValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 919,
														"src": "4053:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4053:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "4053:43:0"
											}
										]
									},
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "3773:127:0",
										"text": " @dev Release the native token (ether) that have already vested.\n Emits a {EtherReleased} event."
									},
									"functionSelector": "86d1a69f",
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "3914:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3921:2:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3939:0:0"
									},
									"scope": 310,
									"src": "3905:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "4274:199:0",
										"statements": [
											{
												"assignments": [
													192
												],
												"declarations": [
													{
														"constant": false,
														"id": 192,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4292:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 219,
														"src": "4284:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 191,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4284:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 196,
												"initialValue": {
													"arguments": [
														{
															"id": 194,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "4312:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 193,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															134,
															156
														],
														"referencedDeclaration": 156,
														"src": "4301:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4301:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4284:34:0"
											},
											{
												"expression": {
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 197,
															"name": "_erc20Released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "4328:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 199,
														"indexExpression": {
															"id": 198,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "4343:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4328:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 200,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "4353:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4328:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "4328:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 204,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "4388:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 205,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "4395:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 203,
														"name": "ERC20Released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "4374:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4374:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "EmitStatement",
												"src": "4369:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 212,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "4442:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 211,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "4435:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$536_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4435:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$536",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "4450:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4450:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "4459:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$536",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 208,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "4412:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$862_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4422:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 622,
														"src": "4412:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$536_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4412:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "4412:54:0"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "4109:113:0",
										"text": " @dev Release the tokens that have already vested.\n Emits a {ERC20Released} event."
									},
									"functionSelector": "19165587",
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "4236:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4252:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "4244:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4243:15:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4274:0:0"
									},
									"scope": 310,
									"src": "4227:246:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "4691:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 231,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4733:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_VestingWallet_$310",
																				"typeString": "contract VestingWallet"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_VestingWallet_$310",
																				"typeString": "contract VestingWallet"
																			}
																		],
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4725:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 229,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4725:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4725:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4739:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4725:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 234,
																	"name": "released",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		103,
																		116
																	],
																	"referencedDeclaration": 103,
																	"src": "4749:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4749:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4725:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 237,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "4761:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 228,
														"name": "_vestingSchedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "4708:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint64) view returns (uint256)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4708:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 227,
												"id": 239,
												"nodeType": "Return",
												"src": "4701:70:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "4479:129:0",
										"text": " @dev Calculates the amount of ether that has already vested. Default implementation is a linear vesting curve."
									},
									"functionSelector": "0a17b06b",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestedAmount",
									"nameLocation": "4622:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4642:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "4635:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 222,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4635:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:18:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "4682:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4681:9:0"
									},
									"scope": 310,
									"src": "4613:165:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "5012:109:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 258,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5078:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_VestingWallet_$310",
																					"typeString": "contract VestingWallet"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_VestingWallet_$310",
																					"typeString": "contract VestingWallet"
																				}
																			],
																			"id": 257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5070:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 256,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5070:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5070:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 253,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 244,
																				"src": "5053:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 252,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "5046:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$536_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5046:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$536",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5060:9:0",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 493,
																	"src": "5046:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5046:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 262,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "5096:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 261,
																	"name": "released",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		103,
																		116
																	],
																	"referencedDeclaration": 116,
																	"src": "5087:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5087:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5046:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 265,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "5104:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 251,
														"name": "_vestingSchedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "5029:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint64) view returns (uint256)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5029:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 250,
												"id": 267,
												"nodeType": "Return",
												"src": "5022:92:0"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "4784:130:0",
										"text": " @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
									},
									"functionSelector": "810ec23b",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestedAmount",
									"nameLocation": "4928:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4949:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4941:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4963:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4956:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 245,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4956:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4940:33:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "5003:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5002:9:0"
									},
									"scope": 310,
									"src": "4919:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "5425:243:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 279,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "5439:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 280,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "5451:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5451:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5439:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 286,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5503:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 287,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "5516:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5516:5:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5503:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 305,
														"nodeType": "Block",
														"src": "5576:86:0",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 299,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 293,
																					"name": "totalAllocation",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 272,
																					"src": "5598:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 297,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 294,
																								"name": "timestamp",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 274,
																								"src": "5617:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint64",
																									"typeString": "uint64"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 295,
																									"name": "start",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 72,
																									"src": "5629:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																										"typeString": "function () view returns (uint256)"
																									}
																								},
																								"id": 296,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5629:7:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "5617:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 298,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5616:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5598:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 300,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5597:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 301,
																			"name": "duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 81,
																			"src": "5641:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5641:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5597:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 278,
																"id": 304,
																"nodeType": "Return",
																"src": "5590:61:0"
															}
														]
													},
													"id": 306,
													"nodeType": "IfStatement",
													"src": "5499:163:0",
													"trueBody": {
														"id": 292,
														"nodeType": "Block",
														"src": "5523:47:0",
														"statements": [
															{
																"expression": {
																	"id": 290,
																	"name": "totalAllocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "5544:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 278,
																"id": 291,
																"nodeType": "Return",
																"src": "5537:22:0"
															}
														]
													}
												},
												"id": 307,
												"nodeType": "IfStatement",
												"src": "5435:227:0",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "5460:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5481:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 278,
															"id": 284,
															"nodeType": "Return",
															"src": "5474:8:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "5127:184:0",
										"text": " @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n an asset given its total historical allocation."
									},
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_vestingSchedule",
									"nameLocation": "5325:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "totalAllocation",
												"nameLocation": "5350:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "5342:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5374:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "5367:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 273,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5367:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5341:43:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "5416:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5415:9:0"
									},
									"scope": 310,
									"src": "5316:352:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 311,
							"src": "1638:4032:0",
							"usedErrors": [
								324,
								329,
								589,
								870,
								875,
								878
							]
						}
					],
					"src": "108:5563:0"
				},
				"id": 0
			},
			"contracts/OpenZeppelin/access/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/OpenZeppelin/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1137
						],
						"Ownable": [
							458
						]
					},
					"id": 459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "contracts/OpenZeppelin/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 459,
							"sourceUnit": 1138,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 313,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1137,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 316,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1137,
										"src": "692:7:1"
									},
									"id": 317,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 315,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 458,
							"linearizedBaseContracts": [
								458,
								1137
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 458,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 318,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 324,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 329,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 335,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 341,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 342,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 355,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 354,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 348,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 347,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 353,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 357,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 356,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 361,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 458,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 364,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 367,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 369,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 375,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 374,
												"id": 376,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 458,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 382,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 384,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 393,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 392,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 388,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1127,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 387,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 391,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 458,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 402,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 401,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 399,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 398,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 458,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 418,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 431,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 424,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 423,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 429,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 433,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 432,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 415,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 414,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 458,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 456,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 443,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 446,
												"initialValue": {
													"id": 445,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 447,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 448,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 451,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 458,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 459,
							"src": "663:2438:1",
							"usedErrors": [
								324,
								329
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"contracts/OpenZeppelin/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/OpenZeppelin/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							536
						]
					},
					"id": 537,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 460,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 461,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 536,
							"linearizedBaseContracts": [
								536
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 470,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 479,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 536,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 536,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 536,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 536,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 520,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 536,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 532,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 536,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 537,
							"src": "203:2575:2",
							"usedErrors": []
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"contracts/OpenZeppelin/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "contracts/OpenZeppelin/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							572
						]
					},
					"id": 573,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 538,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 539,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 572,
							"linearizedBaseContracts": [
								572
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 557,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3022:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3045:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3070:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3093:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3119:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 549,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3136:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 551,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "3155:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 553,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:3"
									},
									"scope": 572,
									"src": "2997:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3501:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:3"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3539:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:3"
									},
									"scope": 572,
									"src": "3485:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "3791:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 568,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:3"
									},
									"scope": 572,
									"src": "3740:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 573,
							"src": "2113:1689:3",
							"usedErrors": []
						}
					],
					"src": "123:3680:3"
				},
				"id": 3
			},
			"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1115
						],
						"IERC20": [
							536
						],
						"IERC20Permit": [
							572
						],
						"SafeERC20": [
							862
						]
					},
					"id": 863,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 574,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "contracts/OpenZeppelin/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 576,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 863,
							"sourceUnit": 537,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 575,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 536,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OpenZeppelin/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 578,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 863,
							"sourceUnit": 573,
							"src": "179:60:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 577,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 572,
										"src": "187:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/OpenZeppelin/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 580,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 863,
							"sourceUnit": 1116,
							"src": "240:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 579,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1115,
										"src": "248:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 581,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 862,
							"linearizedBaseContracts": [
								862
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 584,
									"libraryName": {
										"id": 582,
										"name": "Address",
										"nameLocations": [
											"781:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1115,
										"src": "781:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:4",
									"typeName": {
										"id": 583,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:4",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 589,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "907:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:4"
									},
									"src": "876:46:4"
								},
								{
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 598,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1043:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1060:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1086:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:4"
									},
									"src": "1004:109:4"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "1375:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 610,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "1405:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$536",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 613,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "1427:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$536",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 503,
																	"src": "1427:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 615,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 604,
																			"src": "1444:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 616,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 606,
																			"src": "1448:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 617,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 611,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$536",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 609,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1385:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$536_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:4"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1325:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$536",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 601,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 600,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 536,
														"src": "1325:6:4"
													},
													"referencedDeclaration": 536,
													"src": "1325:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$536",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1339:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1351:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:4"
									},
									"scope": 862,
									"src": "1303:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "1792:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 636,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "1822:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$536",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 639,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "1844:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$536",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 535,
																	"src": "1844:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 641,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 628,
																			"src": "1865:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 642,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 630,
																			"src": "1871:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 643,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 632,
																			"src": "1875:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 644,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 637,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$536",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 635,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1802:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$536_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:4"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "1728:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$536",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 625,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 624,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 536,
														"src": "1728:6:4"
													},
													"referencedDeclaration": 536,
													"src": "1728:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$536",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "1742:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "1756:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "1768:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:4"
									},
									"scope": 862,
									"src": "1702:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "2167:139:4",
										"statements": [
											{
												"assignments": [
													661
												],
												"declarations": [
													{
														"constant": false,
														"id": 661,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 679,
														"src": "2177:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 660,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 666,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$862",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$862",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "2231:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 662,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "2200:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$536",
																"typeString": "contract IERC20"
															}
														},
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 513,
														"src": "2200:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 672,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "2262:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$536",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 673,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "2269:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 674,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "2278:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 675,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "2293:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$536",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 671,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "2249:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$536_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:4"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2112:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$536",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 652,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 651,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 536,
														"src": "2112:6:4"
													},
													"referencedDeclaration": 536,
													"src": "2112:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$536",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2126:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2143:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:4"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:4"
									},
									"scope": 862,
									"src": "2081:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "2607:370:4",
										"statements": [
											{
												"id": 721,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:4",
												"statements": [
													{
														"assignments": [
															692
														],
														"declarations": [
															{
																"constant": false,
																"id": 692,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 721,
																"src": "2641:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 691,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 701,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 697,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$862",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$862",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 695,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 699,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "2699:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 693,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "2668:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$536",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 513,
																"src": "2668:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 702,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "2725:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 703,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "2744:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 712,
														"nodeType": "IfStatement",
														"src": "2721:160:4",
														"trueBody": {
															"id": 711,
															"nodeType": "Block",
															"src": "2763:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 706,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "2821:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 707,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 692,
																				"src": "2830:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 708,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 688,
																				"src": "2848:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 705,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "2788:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 710,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 714,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "2907:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$536",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 715,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "2914:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 716,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "2923:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 717,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 688,
																		"src": "2942:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$536",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 713,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "2894:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$536_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 720,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "2540:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$536",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 683,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 682,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 536,
														"src": "2540:6:4"
													},
													"referencedDeclaration": 536,
													"src": "2540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$536",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "2554:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "2571:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:4"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:4"
									},
									"scope": 862,
									"src": "2509:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "3373:303:4",
										"statements": [
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "3383:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 734,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 744,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 738,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "3426:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$536",
																	"typeString": "contract IERC20"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 523,
															"src": "3426:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 740,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "3442:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 741,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "3451:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 742,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 736,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:4"
											},
											{
												"condition": {
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 746,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "3498:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$536",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 747,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "3505:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$536",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 745,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "3474:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$536_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "3469:201:4",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "3520:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 751,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "3554:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$536",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 754,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "3576:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$536",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 523,
																				"src": "3576:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 756,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 729,
																						"src": "3592:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 757,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 758,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 752,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$536",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 750,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "3534:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$536_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 761,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 763,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "3639:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$536",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 764,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 735,
																		"src": "3646:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$536",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 762,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "3619:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$536_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 766,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "3318:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$536",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 726,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 725,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 536,
														"src": "3318:6:4"
													},
													"referencedDeclaration": 536,
													"src": "3318:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$536",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "3332:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "3349:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:4"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:4"
									},
									"scope": 862,
									"src": "3296:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "4129:559:4",
										"statements": [
											{
												"assignments": [
													780
												],
												"declarations": [
													{
														"constant": false,
														"id": 780,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 811,
														"src": "4478:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 779,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 788,
												"initialValue": {
													"arguments": [
														{
															"id": 786,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "4532:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 783,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "4512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$536",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$536",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 781,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 936,
														"src": "4504:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 789,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "4551:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 795,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "4589:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 796,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:4",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 798,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 793,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:4",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 810,
												"nodeType": "IfStatement",
												"src": "4547:135:4",
												"trueBody": {
													"id": 809,
													"nodeType": "Block",
													"src": "4610:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 805,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 774,
																				"src": "4664:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$536",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$536",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 803,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 802,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "4631:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 808,
															"nodeType": "RevertStatement",
															"src": "4624:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "4088:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$536",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 773,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 772,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 536,
														"src": "4088:6:4"
													},
													"referencedDeclaration": 536,
													"src": "4088:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$536",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "4102:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 775,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:4"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:4"
									},
									"scope": 862,
									"src": "4059:629:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "5278:489:4",
										"statements": [
											{
												"assignments": [
													824,
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 824,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 860,
														"src": "5574:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 823,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 860,
														"src": "5588:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 825,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 834,
												"initialValue": {
													"arguments": [
														{
															"id": 832,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "5635:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 829,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "5623:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$536",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$536",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 827,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 835,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "5657:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 836,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 826,
																				"src": "5669:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:4",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 842,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 826,
																				"src": "5706:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 844,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 843,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 845,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 840,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 848,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 852,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "5738:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$536",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$536",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 850,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 822,
												"id": 859,
												"nodeType": "Return",
												"src": "5650:110:4"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5222:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$536",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 815,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 814,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 536,
														"src": "5222:6:4"
													},
													"referencedDeclaration": 536,
													"src": "5222:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$536",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5236:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 817,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:4"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5272:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 820,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:4"
									},
									"scope": 862,
									"src": "5189:578:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 863,
							"src": "751:5018:4",
							"usedErrors": [
								589,
								598
							]
						}
					],
					"src": "115:5655:4"
				},
				"id": 4
			},
			"contracts/OpenZeppelin/utils/Address.sol": {
				"ast": {
					"absolutePath": "contracts/OpenZeppelin/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1115
						]
					},
					"id": 1116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 864,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 865,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1115,
							"linearizedBaseContracts": [
								1115
							],
							"name": "Address",
							"nameLocation": "203:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:5",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 870,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "349:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:5"
									},
									"src": "316:50:5"
								},
								{
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:5",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 875,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "475:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:5"
									},
									"src": "452:39:5"
								},
								{
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:5",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 878,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:5"
									},
									"src": "591:24:5"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "1602:260:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 888,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1115",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1115",
																		"typeString": "library Address"
																	}
																],
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 886,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 891,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "1640:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 901,
												"nodeType": "IfStatement",
												"src": "1612:109:5",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "1648:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 896,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1115",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1115",
																					"typeString": "library Address"
																				}
																			],
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 894,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 893,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "1669:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 899,
															"nodeType": "RevertStatement",
															"src": "1662:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													903,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 918,
														"src": "1732:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 902,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 910,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 904,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "1750:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 906,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "1772:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:5"
											},
											{
												"condition": {
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:5",
													"subExpression": {
														"id": 911,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "1798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 917,
												"nodeType": "IfStatement",
												"src": "1793:63:5",
												"trueBody": {
													"id": 916,
													"nodeType": "Block",
													"src": "1807:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 913,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "1828:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 915,
															"nodeType": "RevertStatement",
															"src": "1821:24:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1550:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1577:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:5"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:5"
									},
									"scope": 1115,
									"src": "1531:331:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "2794:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 930,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "2833:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "2841:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 929,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "2811:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 928,
												"id": 934,
												"nodeType": "Return",
												"src": "2804:45:5"
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "2727:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "2743:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 923,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "2780:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 926,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:5"
									},
									"scope": 1115,
									"src": "2705:151:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "3293:279:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 950,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1115",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1115",
																		"typeString": "library Address"
																	}
																],
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 948,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 953,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "3331:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 963,
												"nodeType": "IfStatement",
												"src": "3303:108:5",
												"trueBody": {
													"id": 962,
													"nodeType": "Block",
													"src": "3338:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 958,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1115",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1115",
																					"typeString": "library Address"
																				}
																			],
																			"id": 957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 956,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 955,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "3359:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 961,
															"nodeType": "RevertStatement",
															"src": "3352:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													965,
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 965,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 981,
														"src": "3421:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 964,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 981,
														"src": "3435:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 966,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 974,
												"initialValue": {
													"arguments": [
														{
															"id": 972,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "3488:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 968,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "3462:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 970,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "3481:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 976,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "3537:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3545:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 978,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "3554:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 975,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "3510:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 947,
												"id": 980,
												"nodeType": "Return",
												"src": "3503:62:5"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3211:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3227:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 940,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3246:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3279:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 945,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:5"
									},
									"scope": 1115,
									"src": "3180:392:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "3811:154:5",
										"statements": [
											{
												"assignments": [
													993,
													995
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1007,
														"src": "3822:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 992,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 995,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1007,
														"src": "3836:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 994,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1000,
												"initialValue": {
													"arguments": [
														{
															"id": 998,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "3881:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 996,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "3863:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1002,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "3930:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "3938:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1004,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "3947:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1001,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "3903:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 991,
												"id": 1006,
												"nodeType": "Return",
												"src": "3896:62:5"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "3739:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "3755:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:5"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "3797:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 989,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:5"
									},
									"scope": 1115,
									"src": "3711:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "4203:156:5",
										"statements": [
											{
												"assignments": [
													1019,
													1021
												],
												"declarations": [
													{
														"constant": false,
														"id": 1019,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "4214:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1018,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1021,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "4228:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1020,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1026,
												"initialValue": {
													"arguments": [
														{
															"id": 1024,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "4275:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1022,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "4255:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1028,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "4324:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "4332:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1030,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "4341:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1027,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "4297:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1017,
												"id": 1032,
												"nodeType": "Return",
												"src": "4290:62:5"
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "4136:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "4152:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:5"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "4189:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1015,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:5"
									},
									"scope": 1115,
									"src": "4106:253:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "4783:424:5",
										"statements": [
											{
												"condition": {
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:5",
													"subExpression": {
														"id": 1046,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "4798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1071,
													"nodeType": "Block",
													"src": "4857:344:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1053,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1041,
																			"src": "5045:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1057,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1037,
																				"src": "5071:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1068,
															"nodeType": "IfStatement",
															"src": "5041:119:5",
															"trueBody": {
																"id": 1067,
																"nodeType": "Block",
																"src": "5096:64:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1064,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1037,
																					"src": "5138:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1063,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "5121:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1066,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1069,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "5180:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1045,
															"id": 1070,
															"nodeType": "Return",
															"src": "5173:17:5"
														}
													]
												},
												"id": 1072,
												"nodeType": "IfStatement",
												"src": "4793:408:5",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "4807:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1041,
																		"src": "4829:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1048,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "4821:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1051,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "4670:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "4694:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "4716:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1040,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:5"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "4769:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1043,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:5"
									},
									"scope": 1115,
									"src": "4625:582:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "5509:122:5",
										"statements": [
											{
												"condition": {
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:5",
													"subExpression": {
														"id": 1084,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "5524:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1093,
													"nodeType": "Block",
													"src": "5583:42:5",
													"statements": [
														{
															"expression": {
																"id": 1091,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "5604:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1083,
															"id": 1092,
															"nodeType": "Return",
															"src": "5597:17:5"
														}
													]
												},
												"id": 1094,
												"nodeType": "IfStatement",
												"src": "5519:106:5",
												"trueBody": {
													"id": 1090,
													"nodeType": "Block",
													"src": "5533:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1087,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "5555:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1086,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "5547:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1089,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:5",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "5433:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1076,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "5447:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1078,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:5"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "5495:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1081,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:5"
									},
									"scope": 1115,
									"src": "5407:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "5798:461:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1102,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "5874:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1111,
													"nodeType": "Block",
													"src": "6204:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1108,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "6225:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1110,
															"nodeType": "RevertStatement",
															"src": "6218:24:5"
														}
													]
												},
												"id": 1112,
												"nodeType": "IfStatement",
												"src": "5870:383:5",
												"trueBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "5897:301:5",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "6055:133:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1099,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 1099,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:5",
																	"valueSize": 1
																}
															],
															"id": 1106,
															"nodeType": "InlineAssembly",
															"src": "6046:142:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:5",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5760:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1098,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:5"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:5"
									},
									"scope": 1115,
									"src": "5743:516:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1116,
							"src": "195:6066:5",
							"usedErrors": [
								870,
								875,
								878
							]
						}
					],
					"src": "101:6161:5"
				},
				"id": 5
			},
			"contracts/OpenZeppelin/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/OpenZeppelin/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1137
						]
					},
					"id": 1138,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1118,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1137,
							"linearizedBaseContracts": [
								1137
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1123,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1122,
												"id": 1125,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1137,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1132,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1131,
												"id": 1134,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1129,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1137,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1138,
							"src": "624:235:6",
							"usedErrors": []
						}
					],
					"src": "101:759:6"
				},
				"id": 6
			}
		}
	}
}