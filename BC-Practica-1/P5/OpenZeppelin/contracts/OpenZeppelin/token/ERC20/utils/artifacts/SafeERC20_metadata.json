{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "currentAllowance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "requestedDecrease",
						"type": "uint256"
					}
				],
				"name": "SafeERC20FailedDecreaseAllowance",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "SafeERC20FailedOperation",
				"type": "error"
			}
		],
		"devdoc": {
			"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
			"errors": {
				"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
					{
						"details": "Indicates a failed `decreaseAllowance` request."
					}
				],
				"SafeERC20FailedOperation(address)": [
					{
						"details": "An operation with an ERC20 token failed."
					}
				]
			},
			"kind": "dev",
			"methods": {},
			"title": "SafeERC20",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol": "SafeERC20"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/OpenZeppelin/token/ERC20/IERC20.sol": {
			"keccak256": "0xcfc85678b0e3d57286a16be85e750749c626afee8a4fa4c91710b08c1a21ae10",
			"license": "MIT",
			"urls": [
				"bzz-raw://d6842e2bb8a511039fb46a2b15568b140b2d53bf229a529f576c6ab3ed31ff23",
				"dweb:/ipfs/Qmd8pmFAxjArtoaf9yAFSjrN3u3E4UJoBgv2cCkMnZURro"
			]
		},
		"contracts/OpenZeppelin/token/ERC20/extensions/IERC20Permit.sol": {
			"keccak256": "0x558d6d08dc0aadbf9d9524e9db235472c4f543f9e272c0c316362556085f8b46",
			"license": "MIT",
			"urls": [
				"bzz-raw://6227dec5c16a8419c94078e9398be3b938005db60cdf2c5144e74eaf696d11a8",
				"dweb:/ipfs/QmQr6SbCd9tj5sw7WbRYdBWctH5N6vASc1G5ksSgMGy8ap"
			]
		},
		"contracts/OpenZeppelin/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0xb762baa6f32df5fcc7c36c66434bf410cef9eeea5efc5e08d932093aee077ee9",
			"license": "MIT",
			"urls": [
				"bzz-raw://84854c7fa4e6cb5f296d479f63f5c51ee44e6945ee4562a4a7ede6d0f98fbd6c",
				"dweb:/ipfs/Qmdo192MQmTKZ4nVm3FaC4t864vAciqGG53cvZme9d9HSy"
			]
		},
		"contracts/OpenZeppelin/utils/Address.sol": {
			"keccak256": "0x3b6f8360ef94dd8c45bd1ae5ac955d256383d914f37ea977ab44cf22cdd5a6a9",
			"license": "MIT",
			"urls": [
				"bzz-raw://a862eb3eccc1fd838b59935275ee2d5007f834fdaf66737c2c00e25156c94144",
				"dweb:/ipfs/Qmdk6j5vY5xCPys9kg1imJcXRaBEUXGJwEU5WdNTBMEMiK"
			]
		}
	},
	"version": 1
}